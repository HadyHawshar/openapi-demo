{
   "openapi": "3.1.0",
   "info": {
     "title": "Vbout",
     "version": "1.0",
     "description": "# Introduction\nVbout API provides programmatic access to read and write Vbout data. You can use it to synch user information between your \nown database and Vbout's marketing automation, get prospects information and more. The responses are available in JSON/XML.\n# Authentication\nVbout offers authentication through:\n- API Key\n- A special and unique user API key will be generated from your account in order to handle API calls for authentication.\n- Permissions can be granted for third-party apps to operate flowlessly by utilizing your vbout account.",
     "summary": "Vbout's API documentation"
   },
   "servers": [
     {
       "url": "https://api.vbout.com/1",
       "description": "Resource URL"
     }
   ],
   "paths": {
     "/App/Me": {
       "get": {
         "summary": "Application",
         "tags": [
           "Application"
         ],
         "operationId": "get-App-Me",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n  - - -  \n**Particular endpoint Including All Possible Endpoints' responses**\n  ",
         "parameters": [],
         "responses": {
           "100": {
             "description": "Continue"
           },
           "101": {
             "description": "Switching Protocols"
           },
           "200": {
             "description": "Successfull operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "business": {
                       "type": "object",
                       "properties": {
                         "businessname": {
                           "type": "string"
                         },
                         "contactname": {
                           "type": "string"
                         },
                         "phoneNumber": {
                           "type": "string"
                         },
                         "vboutName": {
                           "type": "string"
                         },
                         "package": {
                           "type": "string"
                         }
                       }
                     }
                   },
                   "x-examples": {
                     "example-1": {
                       "business": {
                         "businessname": "Loft Hotels",
                         "contactname": "Paul Downy",
                         "phoneNumber": "212-400-7133",
                         "vboutName": "Loft-corporate",
                         "package": "Franchise"
                       }
                     }
                   }
                 },
                 "examples": {
                   "Example Response": {
                     "value": {
                       "business": {
                         "businessname": "Loft Hotels",
                         "contactname": "Paul Downy",
                         "phoneNumber": "212-400-7133",
                         "vboutName": "Loft-corporate",
                         "package": "Franchise"
                       }
                     }
                   }
                 }
               },
               "application/xml": {
                 "schema": {
                   "type": "object",
                   "properties": {}
                 },
                 "examples": {
                   "Example": {
                     "value": "No sample."
                   }
                 }
               }
             }
           },
           "201": {
             "description": "Created"
           },
           "202": {
             "description": "Accepted"
           },
           "203": {
             "description": "Non-Authoritative Information"
           },
           "204": {
             "description": "No Content"
           },
           "205": {
             "description": "Reset Content"
           },
           "206": {
             "description": "Partial Content"
           },
           "207": {
             "description": "Multi-Status (WebDAV)"
           },
           "208": {
             "description": "Already Reported (WebDAV)"
           },
           "226": {
             "description": "IM Used"
           },
           "300": {
             "description": "Multiple Choices"
           },
           "301": {
             "description": "Moved Permanently"
           },
           "302": {
             "description": "Found"
           },
           "303": {
             "description": "See Other"
           },
           "304": {
             "description": "Not Modified"
           },
           "305": {
             "description": "Use Proxy"
           },
           "306": {
             "description": "(Unused)"
           },
           "307": {
             "description": "Temporary Redirect"
           },
           "308": {
             "description": "Permanent Redirect (experiemental)"
           },
           "400": {
             "description": "Bad Request"
           },
           "401": {
             "description": "Unauthorized"
           },
           "402": {
             "description": "Payment Required"
           },
           "403": {
             "description": "Forbidden"
           },
           "404": {
             "description": "Not Found",
             "application/xml": {
               "schema": {
                 "type": "object",
                 "properties": {}
               },
               "examples": {
                 "XML": {
                   "value": "No sample."
                 }
               }
             }
           },
           "405": {
             "description": "Method Not Allowed"
           },
           "406": {
             "description": "Not Acceptable"
           },
           "407": {
             "description": "Proxy Authentication Required"
           },
           "408": {
             "description": "Request Timeout"
           },
           "409": {
             "description": "Conflict"
           },
           "410": {
             "description": "Gone"
           },
           "411": {
             "description": "Length Required"
           },
           "412": {
             "description": "Precondition Failed"
           },
           "413": {
             "description": "Request Entity Too Large"
           },
           "414": {
             "description": "Request-URI Too Long"
           },
           "415": {
             "description": "Unsupported Media Type"
           },
           "416": {
             "description": "Requested Range Not Satisfiable"
           },
           "417": {
             "description": "Expectation Failed"
           },
           "418": {
             "description": "I'm a teapot (RFC 2324)"
           },
           "420": {
             "description": "Enhance Your Calm (Twitter)"
           },
           "422": {
             "description": "Unprocessable Entity (WebDAV)"
           },
           "423": {
             "description": "Locked (WebDAV)"
           },
           "424": {
             "description": "Failed Dependency (WebDAV)"
           },
           "425": {
             "description": "Too Early"
           },
           "426": {
             "description": "Upgrade Required"
           },
           "428": {
             "description": "Precondition Required"
           },
           "429": {
             "description": "Too Many Requests"
           },
           "431": {
             "description": "Request Header Fields Too Large"
           },
           "444": {
             "description": "No Response (Nginx)"
           },
           "449": {
             "description": "Retry With (Microsoft)"
           },
           "450": {
             "description": "Blocked by Windows Parental Controls (Microsoft)"
           },
           "451": {
             "description": "Unavailable For Legal Reasons"
           },
           "499": {
             "description": "Client Closed Request (Nginx)"
           },
           "500": {
             "description": "Internal Server Error"
           },
           "501": {
             "description": "Not Implemented"
           },
           "502": {
             "description": "Bad Gateway"
           },
           "503": {
             "description": "Service Unavailable"
           },
           "504": {
             "description": "Gateway Timeout"
           },
           "505": {
             "description": "HTTP Version Not Supported"
           },
           "506": {
             "description": "Variant Also Negotiates (Experimental)"
           },
           "507": {
             "description": "Insufficient Storage (WebDAV)"
           },
           "508": {
             "description": "Loop Detected (WebDAV)"
           },
           "509": {
             "description": "Bandwidth Limit Exceeded (Apache)"
           },
           "510": {
             "description": "Not Extended"
           },
           "511": {
             "description": "Network Authentication Required"
           },
           "598": {
             "description": "Network read timeout error"
           },
           "599": {
             "description": "Network connect timeout error"
           }
         },
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/app/me.json?key={YOUR_API_ID}"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/ApplicationWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new ApplicationWS($user_key);\n $results = $app->getBusinessInfo();\n print_r($results);\n ?>\n"
           }
         ]
       },
       "parameters": []
     },
     "/SocialMedia/Channels": {
       "get": {
         "summary": "Channels",
         "tags": [
           "Social Media"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "channels": {
                         "Facebook": {
                           "count": 1,
                           "pages": [
                             {
                               "id": "510584708978405",
                               "name": "Spotless TV"
                             }
                           ]
                         },
                         "Twitter": {
                           "count": 1,
                           "profiles": [
                             {
                               "id": "333248756",
                               "screenname": "Hugoo236",
                               "fullname": "Hugo First"
                             }
                           ]
                         },
                         "Linkedin": {
                           "count": 0,
                           "profiles": []
                         }
                       }
                     }
                   },
                   "properties": {
                     "channels": {
                       "type": "object",
                       "properties": {
                         "Facebook": {
                           "type": "object",
                           "properties": {
                             "count": {
                               "type": "integer"
                             },
                             "pages": {
                               "type": "array",
                               "items": {
                                 "type": "object",
                                 "properties": {
                                   "id": {
                                     "type": "integer"
                                   },
                                   "name": {
                                     "type": "string"
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "Twitter": {
                           "type": "object",
                           "properties": {
                             "count": {
                               "type": "integer"
                             },
                             "profiles": {
                               "type": "array",
                               "items": {
                                 "type": "object",
                                 "properties": {
                                   "id": {
                                     "type": "integer"
                                   },
                                   "screenname": {
                                     "type": "string"
                                   },
                                   "fullname": {
                                     "type": "string"
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "Linkedin": {
                           "type": "object",
                           "properties": {
                             "count": {
                               "type": "integer"
                             },
                             "profiles": {
                               "type": "array",
                               "items": {}
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "channels": {
                         "Facebook": {
                           "count": 1,
                           "pages": [
                             {
                               "id": "510584708978405",
                               "name": "Spotless TV"
                             }
                           ]
                         },
                         "Twitter": {
                           "count": 1,
                           "profiles": [
                             {
                               "id": "333248756",
                               "screenname": "Oli16",
                               "fullname": "Olive Tree"
                             }
                           ]
                         },
                         "Linkedin": {
                           "count": 0,
                           "profiles": []
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-SocialMedia-Channels",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/socialmedia/channels.json?key={YOUR_API_ID}"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new SocialMediaWS($user_key);\n$results = $app->getChannels();\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/SocialMedia/Calendar": {
       "get": {
         "summary": "Calendar",
         "tags": [
           "Social Media"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "calendar": {
                         "count": 168,
                         "items": {
                           "2013-08-15": {
                             "1": {
                               "id": "2347",
                               "message": "http://vbout.com/goto/b0 welcome my man ... how are you [delete url] http://vbout.com/goto/b2",
                               "photo": {
                                 "thumb": "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg",
                                 "original": "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/15/2013 14:52 PM"
                               }
                             },
                             "...": null
                           },
                           "2013-08-16": {
                             "2": {
                               "id": "2366",
                               "message": "test facebook headers",
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:39 PM"
                               }
                             },
                             "3": {
                               "id": "2367",
                               "message": "test facebook post with url  http://vbout.com/goto/bz",
                               "photo": {
                                 "thumb": "https://www.facebook.com/images/fb_icon_325x325.png",
                                 "original": "https://www.facebook.com/images/fb_icon_325x325.png"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:40 PM"
                               }
                             },
                             "4": {
                               "id": "2368",
                               "message": "test all socials spiders  http://vbout.com/goto/bA",
                               "photo": {
                                 "thumb": "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png",
                                 "original": "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:49 PM"
                               }
                             },
                             "...": null
                           }
                         }
                       }
                     }
                   },
                   "properties": {
                     "calendar": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "object",
                           "properties": {
                             "2013-08-15": {
                               "type": "object",
                               "properties": {
                                 "1": {
                                   "type": "object",
                                   "properties": {
                                     "id": {
                                       "type": "integer"
                                     },
                                     "message": {
                                       "type": "string"
                                     },
                                     "photo": {
                                       "type": "object",
                                       "properties": {
                                         "thumb": {
                                           "type": "string"
                                         },
                                         "original": {
                                           "type": "string"
                                         }
                                       }
                                     },
                                     "channel": {
                                       "type": "object",
                                       "properties": {
                                         "network": {
                                           "type": "string"
                                         },
                                         "type": {
                                           "type": "string"
                                         },
                                         "id": {
                                           "type": "string"
                                         },
                                         "name": {
                                           "type": "string"
                                         },
                                         "date": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 },
                                 "...": {
                                   "type": "null"
                                 }
                               }
                             },
                             "2013-08-16": {
                               "type": "object",
                               "properties": {
                                 "2": {
                                   "type": "object",
                                   "properties": {
                                     "id": {
                                       "type": "integer"
                                     },
                                     "message": {
                                       "type": "string"
                                     },
                                     "channel": {
                                       "type": "object",
                                       "properties": {
                                         "network": {
                                           "type": "string"
                                         },
                                         "type": {
                                           "type": "string"
                                         },
                                         "id": {
                                           "type": "string"
                                         },
                                         "name": {
                                           "type": "string"
                                         },
                                         "date": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 },
                                 "3": {
                                   "type": "object",
                                   "properties": {
                                     "id": {
                                       "type": "integer"
                                     },
                                     "message": {
                                       "type": "string"
                                     },
                                     "photo": {
                                       "type": "object",
                                       "properties": {
                                         "thumb": {
                                           "type": "string"
                                         },
                                         "original": {
                                           "type": "string"
                                         }
                                       }
                                     },
                                     "channel": {
                                       "type": "object",
                                       "properties": {
                                         "network": {
                                           "type": "string"
                                         },
                                         "type": {
                                           "type": "string"
                                         },
                                         "id": {
                                           "type": "string"
                                         },
                                         "name": {
                                           "type": "string"
                                         },
                                         "date": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 },
                                 "4": {
                                   "type": "object",
                                   "properties": {
                                     "id": {
                                       "type": "integer"
                                     },
                                     "message": {
                                       "type": "string"
                                     },
                                     "photo": {
                                       "type": "object",
                                       "properties": {
                                         "thumb": {
                                           "type": "string"
                                         },
                                         "original": {
                                           "type": "string"
                                         }
                                       }
                                     },
                                     "channel": {
                                       "type": "object",
                                       "properties": {
                                         "network": {
                                           "type": "string"
                                         },
                                         "type": {
                                           "type": "string"
                                         },
                                         "id": {
                                           "type": "integer"
                                         },
                                         "name": {
                                           "type": "string"
                                         },
                                         "date": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 },
                                 "...": {
                                   "type": "null"
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "calendar": {
                         "count": 168,
                         "items": {
                           "2013-08-15": {
                             "1": {
                               "id": "2347",
                               "message": "http://vbout.com/goto/b0 welcome my man ... how are you [delete url] http://vbout.com/goto/b2",
                               "photo": {
                                 "thumb": "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg",
                                 "original": "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/15/2013 14:52 PM"
                               }
                             },
                             "...": null
                           },
                           "2013-08-16": {
                             "2": {
                               "id": "2366",
                               "message": "test facebook headers",
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:39 PM"
                               }
                             },
                             "3": {
                               "id": "2367",
                               "message": "test facebook post with url  http://vbout.com/goto/bz",
                               "photo": {
                                 "thumb": "https://www.facebook.com/images/fb_icon_325x325.png",
                                 "original": "https://www.facebook.com/images/fb_icon_325x325.png"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:40 PM"
                               }
                             },
                             "4": {
                               "id": "2368",
                               "message": "test all socials spiders  http://vbout.com/goto/bA",
                               "photo": {
                                 "thumb": "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png",
                                 "original": "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png"
                               },
                               "channel": {
                                 "network": "Facebook",
                                 "type": "Page",
                                 "id": "510584708978405",
                                 "name": "Spotless TV",
                                 "date": "08/16/2013 13:49 PM"
                               }
                             },
                             "...": null
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-SocialMedia-Calendar",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "channels",
             "description": "The channels from where the posts are gathered.<br>**Possible Values:**  all | facebook | twitter | linkedin"
           },
           {
             "schema": {
               "type": "string",
               "format": "date",
               "default": "none",
               "pattern": "m/d/Y | Y-m-d"
             },
             "in": "query",
             "name": "from",
             "required": true,
             "description": "The from date which the reviews are returned. The filter must be `date` for this parameter to work.<br>**Possible Values:** (Date) "
           },
           {
             "schema": {
               "type": "string",
               "format": "date",
               "default": "none",
               "pattern": "m/d/Y | Y-m-d"
             },
             "in": "query",
             "name": "to",
             "required": true,
             "description": "The to date which the reviews are returned. The filter must be `date` for this parameter to work.<br>**Possible Values:** (Date) "
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "includeposted",
             "description": "Include already scheduled posts inside the results.<br>**Possible Values:** true | false"
           },
           {
             "schema": {
               "type": "number",
               "default": 10
             },
             "in": "query",
             "name": "limit",
             "description": "Set your record limit number per page.<br>**Possible Values:**(Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": 1
             },
             "in": "query",
             "name": "page",
             "description": "Set which page you wanna get.<br>**Possible Values:**(Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "asc"
             },
             "in": "query",
             "name": "sort",
             "description": "Record Sorting.<br>**Possible Values:**  asc | desc"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/socialmedia/calendar.json?key={YOUR_API_ID}\n   channels=all\n   includeposted=true\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new SocialMediaWS($user_key);\n$params = array(\n    'channels' => 'all',\n    'includeposted' => 'true',\n);\n$results = $app->getCalendar( $params );\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/SocialMedia/Stats": {
       "get": {
         "summary": "Stats",
         "tags": [
           "Social Media"
         ],
         "responses": {
           "200": {
             "description": "Successfull operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "stats": {
                       "type": "object",
                       "properties": {
                         "items": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "id": {
                                 "type": "integer"
                               },
                               "shortenurl": {
                                 "type": "string"
                               },
                               "realurl": {
                                 "type": "string"
                               },
                               "message": {
                                 "type": "string"
                               },
                               "date": {
                                 "type": "string"
                               },
                               "tracks": {
                                 "type": "integer"
                               },
                               "clicks": {
                                 "type": "object",
                                 "properties": {
                                   "facebook": {
                                     "type": "integer"
                                   }
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "stats": {
                         "items": [
                           {
                             "id": "2236",
                             "shortenurl": "A4",
                             "realurl": "http://munchies.com/index.php?route=information/contact&__vbtrk=NjkzNDowOnNvY2lhbG1lZGlhOmZhY2Vib29r&__vbtrk=MjgzNTowOnNvY2lhbG1lZGlhOnR3aXR0ZXI=",
                             "message": "http://vbout.com/goto/A4 click here",
                             "date": "1402401420",
                             "tracks": 9,
                             "clicks": {
                               "facebook": "9"
                             }
                           },
                           {
                             "id": "2436",
                             "shortenurl": "Di",
                             "realurl": "http://www.munchie.com/?__vbtrk=NzkxNjowOnNvY2lhbG1lZGlhOmZhY2Vib29r",
                             "message": "Test leadscoring  https://www.vbout.com/goto/Di",
                             "date": "1408031400",
                             "tracks": 8,
                             "clicks": {
                               "facebook": "8"
                             }
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-SocialMedia-Stats",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "channels",
             "description": "The channels where the posts are gathered from.<br>**Possible values:**  all | facebook | twitter | linkedin | pinterest"
           },
           {
             "schema": {
               "type": "string",
               "default": "asc"
             },
             "in": "query",
             "name": "sort",
             "description": "Record Sorting.<br>**Possible values:**  asc | desc"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/socialmedia/stats.json?key={YOUR_API_ID}&channels=facebook\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new SocialMediaWS($user_key);\n$params = array(\n    'channels' => 'facebook',\n);\n$results = $app->getStats( $params );\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/SocialMedia/GetPost": {
       "get": {
         "summary": "Post",
         "tags": [
           "Social Media"
         ],
         "responses": {
           "200": {
             "description": "Successfull operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "item": {
                         "id": "682",
                         "title": "OSV Treats & Chews provides a big nutritional boost of phytonutrients & antioxidants from fruits & vegetables; tomatoes, spinach & carrots! http://www.clearconsciencepet.com/osv-meaty-treats/",
                         "datetime": "05/16/2013 10:34 AM",
                         "item": {
                           "uid": "0"
                         },
                         "type": "facebook",
                         "image": "",
                         "profile": "166346373390497"
                       }
                     }
                   },
                   "properties": {
                     "item": {
                       "type": "object",
                       "properties": {
                         "id": {
                           "type": "integer"
                         },
                         "title": {
                           "type": "string"
                         },
                         "datetime": {
                           "type": "string"
                         },
                         "item": {
                           "type": "object",
                           "properties": {
                             "uid": {
                               "type": "integer"
                             }
                           }
                         },
                         "type": {
                           "type": "string"
                         },
                         "image": {
                           "type": "string"
                         },
                         "profile": {
                           "type": "string"
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "item": {
                         "id": "682",
                         "title": "OSV Treats & Chews provides a big nutritional boost of phytonutrients & antioxidants from fruits & vegetables; tomatoes, spinach & carrots! http://www.clearconsciencepet.com/osv-meaty-treats/",
                         "datetime": "05/16/2013 10:34 AM",
                         "item": {
                           "uid": "0"
                         },
                         "type": "facebook",
                         "image": "",
                         "profile": "166346373390497"
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-SocialMedia-post",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "ID",
             "description": "The id of the post<br>**Possible values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "Channel",
             "description": "The channel where the post is created.<br>**Possible values:** facebook | twitter | linkedin",
             "required": true
           }
         ],
         "x-coxdeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/socialmedia/getpost.json?key={YOUR_API_ID}&id=682&channel=facebook\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new SocialMediaWS($user_key);\n$params = array(\n    'id' => '682',\n    'channel' => 'facebook',\n);\n$results = $app->getMyPost( $params );\nprint_r($results);\n?>\n"
           }
         ]
       },
       "parameters": []
     },
     "/SocialMedia/AddPost": {
       "post": {
         "summary": "Add Post",
         "operationId": "post-SocialMedia-AddPost",
         "responses": {
           "200": {
             "description": "Successful operation"
           }
         },
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "message",
             "required": true,
             "description": "The post message to be scheduled/sent<br> **Possible values:**\"Text\""
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "channel",
             "description": "The channels which the post will be sent to.<br>**Possible values:** facebook | twitter | linkedin | pinterest | instagram",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "channelid",
             "required": true,
             "description": "The channels which the post will be sent to.<br> **Possible values:** 1 | 2 | 3 | 4"
           },
           {
             "schema": {
               "type": "string"
             },
             "in": "query",
             "name": "photo",
             "description": "The photo which will be attached to the post.<br> **Possible values:** (Link) or (Uploaded Image)"
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "isscheduled",
             "description": "This flag will make the post to be scheduled for future.<br> **Possible values:** true | false"
           },
           {
             "schema": {
               "type": "string",
               "pattern": "  m/d/Y | Y-m-d",
               "default": "none",
               "format": "date"
             },
             "in": "query",
             "name": "scheduleddate",
             "description": "Date of the post to be scheduled.<br> **Possible values:** (Date)"
           },
           {
             "schema": {
               "type": "string",
               "format": "time",
               "default": "none"
             },
             "in": "query",
             "name": "scheduledhours",
             "description": "Time of the post to be scheduled.<br> **Possible values:** (Time)"
           },
           {
             "schema": {
               "type": "string"
             },
             "in": "query",
             "description": "AMPM of the post to be scheduled.<br> **Possible values:** AM | PM | am | pm",
             "name": "scheduledampm"
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "trackableLinks",
             "description": "Convert all links inside message to short urls.<br> **Possible values:** true | false"
           }
         ],
         "tags": [
           "Social Media"
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/socialmedia/addpost.json?key={YOUR_API_ID}\nmessage=Hello World\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/SocialMediaWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new SocialMediaWS($user_key);\n $params = array(\n  'message' => 'Hello World',\n );\n $results = $app->AddNewpost( $params );\n print_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/SocialMedia/EditPost": {
       "post": {
         "summary": "Edit Post",
         "operationId": "post-SocialMedia-EditPost",
         "responses": {},
         "tags": [
           "Social Media"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/socialmedia/editpost.json?key={YOUR_API_ID}\n  id=1\n  channel=facebook\n  message=Hello World!\n  scheduleddatetime=2020-10-20 15:30:00\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "description": "ID of the post message to be edited.<br>**Possible values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "channel",
             "description": "The channel where the post was scheduled.<br>**Possible values:** facebook | twitter | linkedin | pinterest | instagram",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "message",
             "description": "The post message to be scheduled/sent.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "pattern": "ISO-8601 (Y-m-d H:i:s)",
               "format": "date-time"
             },
             "in": "query",
             "name": "scheduleddatetime",
             "description": "Date/Time of the post to be scheduled<br>**Possible values:** (Datetime)"
           }
         ]
       }
     },
     "/SocialMedia/DeletePost": {
       "delete": {
         "summary": "Delete Post",
         "operationId": "delete-SocialMedia-DeletePost",
         "responses": {
           "200": {
             "description": "Successful operation"
           }
         },
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/socialmedia/deletepost.json?key={YOUR_API_ID}\n  id=1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}')\t\n$app = new SocialMediaWS($user_key);\n$id = '1';\n$results = $app->removePost($id);\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "ID of the post message to be deleted.<br>**Possible Values:**(ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "channel",
             "description": "The channels which the post will be sent to.<br>**Possible Values:** facebook | twitter | linkedin"
           }
         ],
         "tags": [
           "Social Media"
         ]
       }
     },
     "/EmailMarketing/Campaigns": {
       "get": {
         "summary": "Campaigns",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "campaigns": {
                         "count": 1,
                         "items": {
                           "Draft": {
                             "data": [
                               {
                                 "id": "889",
                                 "subject": "Hop Hop, Happy Fridays have never been happier ",
                                 "message": "...",
                                 "replyto": "info@mycompany.com",
                                 "from_email": "no-reply@mycompany.com",
                                 "from_name": "Rick's Club American",
                                 "creation_date": "11/04/2014 16:33"
                               }
                             ]
                           }
                         }
                       }
                     }
                   },
                   "properties": {
                     "campaigns": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "object",
                           "properties": {
                             "Draft": {
                               "type": "object",
                               "properties": {
                                 "data": {
                                   "type": "array",
                                   "items": {
                                     "type": "object",
                                     "properties": {
                                       "id": {
                                         "type": "integer"
                                       },
                                       "subject": {
                                         "type": "string"
                                       },
                                       "message": {
                                         "type": "string"
                                       },
                                       "replyto": {
                                         "type": "string"
                                       },
                                       "from_email": {
                                         "type": "string"
                                       },
                                       "from_name": {
                                         "type": "string"
                                       },
                                       "creation_date": {
                                         "type": "string"
                                       }
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "campaigns": {
                         "count": 1,
                         "items": {
                           "Draft": {
                             "data": [
                               {
                                 "id": "889",
                                 "subject": "Hop Hop, Happy Fridays have never been happier ",
                                 "message": "...",
                                 "replyto": "info@mycompany.com",
                                 "from_email": "no-reply@mycompany.com",
                                 "from_name": "Rick's Club American",
                                 "creation_date": "11/04/2014 16:33"
                               }
                             ]
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-Campaigns",
         "description": "**Authentication:** `Required`  \n  - - -\n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "filter",
             "description": "The timeline during which the reviews are returned.<br>**Possible values:**  all | sent | scheduled | draft | automation",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "none",
               "pattern": "m/d/Y | Y-m-d",
               "format": "date"
             },
             "in": "query",
             "name": "from",
             "description": "The from date which the reviews are returned. The filter must be 'date' for this parameter to work.<br>**Possible values:**   (Date)"
           },
           {
             "schema": {
               "type": "string",
               "format": "date",
               "pattern": "m/d/Y | Y-m-d",
               "default": "none"
             },
             "in": "query",
             "description": "The from date which the reviews are returned. The filter must be 'date' for this parameter to work.<br>**Possible values:**  (Date)  ",
             "name": "to"
           },
           {
             "schema": {
               "type": "number",
               "default": "10"
             },
             "in": "query",
             "name": "limit",
             "description": "Set your record limit number per page.<br>**Possible values:**  (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": 1
             },
             "in": "query",
             "name": "page",
             "description": "Set which page you wanna get.<br>**Possible values:**  (Number)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/campaigns.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n   require_once('../PATH/TO/services/EmailMarketingWS.php');\n   $user_key = array('api_key' => '{YOUR_API_KEY}');\n   $app = new EmailMarketingWS($user_key);\n   $params = array(\n   'filter' => 'all',\n   'limit' => '10',\n       );\n     $results = $app->getCampaigns( $params );\n     print_r($results);\n    ?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/GetCampaign": {
       "get": {
         "summary": "Campaign",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "item": {
                         "id": "889",
                         "subject": "Reservations were never that easy!",
                         "message": "...",
                         "replyto": "no-reply@lofthotels.com",
                         "from_email": "reservations@lofthotels.com",
                         "from_name": "Loft Hotels",
                         "creation_date": "11/04/2014 16:33"
                       }
                     }
                   },
                   "properties": {
                     "item": {
                       "type": "object",
                       "properties": {
                         "id": {
                           "type": "integer"
                         },
                         "subject": {
                           "type": "string"
                         },
                         "message": {
                           "type": "string"
                         },
                         "replyto": {
                           "type": "string"
                         },
                         "from_email": {
                           "type": "string"
                         },
                         "from_name": {
                           "type": "string"
                         },
                         "creation_date": {
                           "type": "string"
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "item": {
                         "id": "889",
                         "subject": "Reservations were never that easy!",
                         "message": "...",
                         "replyto": "no-reply@lofthotels.com",
                         "from_email": "reservations@lofthotels.com",
                         "from_name": "Loft Hotels",
                         "creation_date": "11/04/2014 16:33"
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetCampaign",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": " id",
             "description": "The ID of the campaign to return.<br>**Possible Values:**  (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "standard"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the campaign.<br>**Possible Values:**  standard | automated"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcampaign.json?key={YOUR_API_ID}&id=889&type=standard\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => '889',\n     'type' => 'standard',\n );\n $results = $app->getCampaign( $params );\n print_r($results);\n ?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/Stats": {
       "get": {
         "summary": "Stats",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "campaign": {
                       "type": "object",
                       "properties": {
                         "stats": {
                           "type": "object",
                           "properties": {
                             "open": {
                               "type": "string"
                             },
                             "unopened": {
                               "type": "string"
                             },
                             "bounced": {
                               "type": "string"
                             },
                             "unsubscribed": {
                               "type": "string"
                             }
                           }
                         },
                         "clicks": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "url": {
                                 "type": "string"
                               },
                               "message": {
                                 "type": "string"
                               },
                               "clickers": {
                                 "type": "array",
                                 "items": {
                                   "type": "string"
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   },
                   "x-examples": {
                     "example-1": {
                       "campaign": {
                         "stats": {
                           "open": "1 (33.33%)",
                           "unopened": "2 (66.67%)",
                           "bounced": "0 (0%)",
                           "unsubscribed": "11 (366.67%)"
                         },
                         "clicks": [
                           {
                             "url": "http://www.netalinissim.com/img/logo.jpg?1400686763",
                             "message": ""
                           },
                           {
                             "url": "http://www.netalinissim.com",
                             "message": "",
                             "clickers": [
                               "example@gmail.com(2 clicks)"
                             ]
                           }
                         ]
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "campaign": {
                         "stats": {
                           "open": "1 (33.33%)",
                           "unopened": "2 (66.67%)",
                           "bounced": "0 (0%)",
                           "unsubscribed": "11 (366.67%)"
                         },
                         "clicks": [
                           {
                             "url": "http://www.netalinissim.com/img/logo.jpg?1400686763",
                             "message": ""
                           },
                           {
                             "url": "http://www.netalinissim.com",
                             "message": "",
                             "clickers": [
                               "Example@gmail.com(2 clicks)"
                             ]
                           }
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-Stats",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the campaign to return.<br>**Possible values:**  (ID)  ",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "standard"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the campaign.<br>**Possible values:**  standard | automated"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcampaign.json?key={YOUR_API_ID}&id=889&type=standard\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => '889',\n     'type' => 'standard',\n );\n $results = $app->getCampaign( $params );\n print_r($results);\n ?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/AddCampaign": {
       "post": {
         "summary": "Add Campaign",
         "operationId": "post-EmailMarketing-AddCampaign",
         "responses": {},
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "name",
             "required": true,
             "description": "The name of the campaign.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "subject",
             "description": "The subject line for the campaign.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none",
               "format": "email"
             },
             "in": "query",
             "required": true,
             "name": "fromemail",
             "description": "The from email of the campaign.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "from_name",
             "description": "The from name of the campaign.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none",
               "format": "email"
             },
             "in": "query",
             "required": true,
             "name": "reply_to",
             "description": "The reply to email of the campaign.<br>**Possible values:** (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "body",
             "description": "Message body.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "standard"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the campaign.<br>**Possible values:** standard | automated"
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "isscheduled",
             "description": "The flag to schedule the campaign for the future.<br>**Possible values:**  true | false"
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "isdraft",
             "description": "The flag to set the campaign to draft.<br>**Possible values:**  true | false"
           },
           {
             "schema": {
               "type": "string",
               "format": "date",
               "pattern": "m/d/Y | Y-m-d",
               "default": "none"
             },
             "in": "query",
             "name": "scheduled_datetime",
             "description": "The date and time to schedule the campaign.<br>**Possible values:**  (Date)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "audiences",
             "description": "IDs of audience campaign recipients.(comma separated)<br>**Possible values:**  (IDs)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "lists",
             "description": "IDs of list campaign recipients.(comma separated)<br>**Possible values:**  (IDs)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/addcampaign.json?key={YOUR_API_ID}\n   name=Test Campaign\n   subject=Hello World\n   fromemail=info@example.com\n   body=Message body\n   type=standard\n   isdraft=true\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$params = array(\n    'name' => 'Test Campaign',\n    'subject' => 'Hello World',\n    'fromemail' => 'info@example.com',\n    'body' => 'Message body',\n    'type' => 'standard',\n    'isdraft' => 'true',\n);\n$results = $app->addNewCampaign( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/EditCampaign": {
       "post": {
         "summary": "Edit Campaign",
         "operationId": "post-EmailMarketing-EditCampaign",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the campaign.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "name",
             "description": "The name of the campaign.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "subject",
             "description": "The subject line of the campaign.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "body",
             "description": "Message body.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "required": true,
             "name": "fromemail",
             "description": "The from email of the campaign.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none"
             },
             "in": "query",
             "name": "from_name",
             "required": true,
             "description": "The from name of the campaign.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "none",
               "format": "email"
             },
             "in": "query",
             "name": "reply_to",
             "description": "The reply to email of the campaign.<br>**Possible values:**(Email)",
             "required": true
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "isscheduled",
             "description": "The flag to schedule the campaign for the future.<br>**Possible values:** true | false"
           },
           {
             "schema": {
               "type": "boolean",
               "default": "false"
             },
             "in": "query",
             "name": "isdraft",
             "description": "The flag to set the campaign to draft.<br>**Possible values:** true | false"
           },
           {
             "schema": {
               "type": "string",
               "pattern": "m/d/Y | Y-m-d",
               "default": "none",
               "format": "date-time"
             },
             "in": "query",
             "name": "scheduled_datetime",
             "description": "The date time to schedule the campaign."
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "audiences",
             "description": "IDs of audience campaign recipients.(comma separated)<br>**Possible values:** (IDs)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "lists",
             "description": "IDs of list campaign recipients.(comma separated)<br>**Possible values:** (IDs)"
           },
           {
             "schema": {
               "type": "string",
               "default": "standard"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the campaign.<br>**Possible values:** standard | automated"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/editcampaign.json?key={YOUR_API_ID}\n   name=Test Campaign\n   subject=Hello World\n   fromemail=info@example.com\n   body=Here the content of your message\n   type=standard\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$params = array(\n    'name' => 'Test Campaign',\n    'subject' => 'Hello World',\n    'fromemail' => 'info@example.com',\n    'body' => 'Here the content of your message',\n    'type' => 'standard',\n);\n$results = $app->updateCampaign( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       },
       "parameters": []
     },
     "/EmailMarketing/DeleteCampaign": {
       "delete": {
         "summary": "Delete Campaign",
         "operationId": "delete-EmailMarketing-DeleteCampaign",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the campaign to delete.<br>**Possible values:**   (ID) "
           },
           {
             "schema": {
               "type": "string",
               "default": "standard"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the campaign.<br>**Possible values:**  standard | automated"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/deletecampaign.json?key={YOUR_API_ID}\n  id=886\n  type=standard\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => '886',\n     'type' => 'standard',\n );\n $results = $app->removeCampaign( $params );\n print_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/GetContacts": {
       "get": {
         "summary": "Contacts",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "contacts": {
                         "count": 15,
                         "items": [
                           {
                             "id": "3",
                             "email": "jim@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "4",
                             "email": "joe@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "62",
                             "email": "jim@tester222.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "contacts": {
                       "type": "object"
                     },
                     "count": {
                       "type": "integer"
                     },
                     "items": {
                       "type": "array",
                       "items": [
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "email": {
                               "type": "string"
                             },
                             "status": {
                               "type": "string"
                             },
                             "registration_date": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "email": {
                               "type": "string"
                             },
                             "status": {
                               "type": "string"
                             },
                             "registration_date": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "email": {
                               "type": "string"
                             },
                             "status": {
                               "type": "string"
                             },
                             "registration_date": {
                               "type": "string"
                             }
                           }
                         }
                       ]
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "contacts": {
                         "count": 15,
                         "items": [
                           {
                             "id": "3",
                             "email": "jim@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "4",
                             "email": "joe@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "62",
                             "email": "jim@tester222.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetContacts",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "0"
             },
             "in": "query",
             "name": " listid",
             "description": "The ID of the list to return its contacts.<br>**Possible values:**  (IDs)",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcontacts.json?key={YOUR_API_ID}&listid=524\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$listid = '524';\n$results = $app->getMyContacts($listid);\nprint_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Contact"
         ]
       }
     },
     "/EmailMarketing/GetContactsByPhoneNumber": {
       "get": {
         "summary": "Contacts By Phone Number",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "contacts": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": [
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "email": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 },
                                 "registration_date": {
                                   "type": "string"
                                 }
                               }
                             },
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "email": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 },
                                 "registration_date": {
                                   "type": "string"
                                 }
                               }
                             },
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "email": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 },
                                 "registration_date": {
                                   "type": "string"
                                 }
                               }
                             }
                           ]
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "contacts": {
                         "count": 15,
                         "items": [
                           {
                             "id": "3",
                             "email": "jim@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "4",
                             "email": "joe@tester.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           {
                             "id": "62",
                             "email": "jim@tester222.com",
                             "status": "1",
                             "registration_date": "11/30/2014 00:00"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetContactsByPhoneNumber",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "0"
             },
             "in": "query",
             "name": "listid",
             "required": true,
             "description": "The ID of the list to return its contacts.<br>**Possible values:**  (IDs)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/EmailMarketing/GetContactsByPhoneNumber.json?key= {YOUR_API_ID}&phone=+19123456789&listid=524"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$phone = '+19123456789';\n$listid = '524';\n$results = $app->getContactsByPhoneNumber($phone, $listid);\nprint_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Contact"
         ]
       }
     },
     "/EmailMarketing/GetContactByEmail": {
       "get": {
         "summary": "Contact By Email",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "contact": {
                         "id": "3",
                         "email": "jim@tester.com",
                         "status": "1",
                         "registration_date": "11/30/1998 00:00"
                       }
                     }
                   },
                   "properties": {
                     "contact": {
                       "type": "object",
                       "properties": {
                         "id": {
                           "type": "integer"
                         },
                         "email": {
                           "type": "string"
                         },
                         "status": {
                           "type": "string"
                         },
                         "registration_date": {
                           "type": "string"
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "contact\"": {
                         "id": "3",
                         "email": "jim@tester.com",
                         "status": "1",
                         "registration_date": "11/30/1998 00:00"
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetContactByEmail",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "https://api.vbout.com/1/emailmarketing/getcontactbyemail"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$phone = '+19123456789';\n$listid = '524';\n$results = $app->getContactsByPhoneNumber($phone, $listid);\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "none",
               "format": "email"
             },
             "in": "query",
             "name": "email",
             "required": true,
             "description": "The Email of the contact to return.**Possible values:** (Email)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "listid",
             "description": "The List id of which this contact does belong to.**Possible values:**(ID)"
           }
         ],
         "tags": [
           "Contact"
         ]
       }
     },
     "/EmailMarketing/GetContact": {
       "get": {
         "summary": "Contact",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "contact": {
                         "id": "3",
                         "email": "jim@tester.com",
                         "status": "1",
                         "registration_date": "11/30/1998 00:00"
                       }
                     }
                   },
                   "properties": {
                     "contact": {
                       "type": "object",
                       "properties": {
                         "id": {
                           "type": "integer"
                         },
                         "email": {
                           "type": "string"
                         },
                         "status": {
                           "type": "string"
                         },
                         "registration_date": {
                           "type": "string"
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "contact\"": {
                         "id": "3",
                         "email": "jim@tester.com",
                         "status": "1",
                         "registration_date": "11/30/1998 00:00"
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetContact",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "none"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the contact to return.<br>**Possible values:** (ID)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcontact.json?key={YOUR_API_ID}&id=3\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$id = '3';\n$results = $app->getMyContact($id);\nprint_r($results);\n?>\n"
           }
         ],
         "tags": [
           "Contact"
         ]
       },
       "parameters": []
     },
     "/EmailMarketing/AddContact": {
       "post": {
         "summary": "Add Contact",
         "operationId": "post-EmailMarketing-AddContact",
         "tags": [
           "Contact"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": " status",
             "description": "The status of the contact.<br>**Possible values:** (Active | Disactive)",
             "required": true
           },
           {
             "schema": {
               "type": "integer"
             },
             "in": "query",
             "name": "listid",
             "description": "The ID of the list to assign this contact to.<br>**Possible values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "email",
             "description": "The email of the contact.<br>**Possible values:** (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "ipaddress",
             "description": "The ip of the contact.<br>**Possible values:** (IP)"
           },
           {
             "schema": {
               "type": "array",
               "default": "None"
             },
             "in": "query",
             "name": "fields",
             "description": "The list of custom fields added to a specific list.<br>**Possible values:**  Array('fieldID'=>'fieldValue')"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/addcontact.json?key={YOUR_API_ID} email=info@example.com status=active listid=24 fields[125]=John fields[1204]=Doe fields[325]=1983-9-1"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$id = '3';\n$results = $app->getMyContact($id);\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/EditContact": {
       "post": {
         "summary": "Edit Contact",
         "operationId": "post-EmailMarketing-EditContact",
         "tags": [
           "Contact"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the contact.<br>**Possible values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "email",
             "description": "The email of the contact.<br>**Possible values:** (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "ipaddress",
             "description": "The ip of the contact.<br>**Possible values:** (IP)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "status",
             "description": "The status of the contact.<br>**Possible values:** (Active | Disactive)"
           },
           {
             "schema": {
               "type": "array",
               "default": "None"
             },
             "in": "query",
             "name": "fields",
             "description": "The list of custom fields added to a specific list.<br>**Possible values:**  Array('fieldID'=>'fieldValue')"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/editcontact.json?key={YOUR_API_ID}\n  id=1\n  email=info@example.com\n  status=active\n  listid=24\n  fields[125]=John\n  fields[1204]=Doe\n  fields[325]=1983-9-1\n"
           },
           {
             "lang": "PHP",
             "source": "\"<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$params = array(\n    'id' => '1',\n    'email' => 'info@example.com',\n    'status' => 'active',\n    'listid' => '24',\n    'fields' => array('125' => 'John','1204' => 'Doe','325' => '1983-9-1',),\n);\n$results = $app->updateContact( $params );\nprint_r($results);\n?>\n"
           }
         ]
       },
       "parameters": []
     },
     "/EmailMarketing/SyncContact": {
       "post": {
         "summary": "Sync Contact",
         "operationId": "post-EmailMarketing-SyncContact",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n  - - -  \n**Note:** All emails having the same email text available in the provided list will be updated if exists (case email is not required).",
         "tags": [
           "Contact"
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "email",
             "description": "The email of the contact.<br>**Possible values:** (Email)",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "listid",
             "description": "The ID of the list to assign this contact to.<br>**Possible values:** (ID) "
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "ipaddress",
             "description": "The ip of the contact.<br>**Possible values:** (IP)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "status",
             "description": "The status of the contact.<br>**Possible values:** (Active | Disactive)"
           },
           {
             "schema": {
               "type": "array",
               "default": "None"
             },
             "in": "query",
             "name": "fields",
             "description": "The list of custom fields added to a specific list.<br>**Possible values:** Array('fieldID'=>'fieldValue')"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/synccontact.json?key={YOUR_API_ID}\n   email=info@example.com\n   status=active\n   listid=24,25,12\n   fields[125]=John\n   fields[1204]=Doe\n   fields[325]=1983-9-1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'email' => 'info@example.com',\n     'status' => 'active',\n     'listid' => '24,25,12',\n     'fields' => array('125' => 'John','1204' => 'Doe','325' => '1983-9-1',),\n );\n $results = $app->syncContactMethod( $params );\n print_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/DeleteContact": {
       "delete": {
         "summary": "Delete Contact",
         "operationId": "delete-EmailMarketing-DeleteContact",
         "tags": [
           "Contact"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the contact to delete.<br> **Possible values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "listid",
             "description": "The ID of the list to delete from.<br> **Possible values:** (ID)",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/deletecontact.json?key={YOUR_API_ID} id=14523 listid=45678"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'email' => 'info@example.com',\n     'status' => 'active',\n     'listid' => '24,25,12',\n     'fields' => array('125' => 'John','1204' => 'Doe','325' => '1983-9-1',),\n );\n $results = $app->syncContactMethod( $params );\n print_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/MoveContact": {
       "post": {
         "summary": "Move Contact",
         "operationId": "post-EmailMarketing-MoveContact",
         "tags": [
           "Contact"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the contact.<br>**Possible Values:** (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "listid",
             "description": "The ID of the list to assign this contact to.<br>**Possible values:** (ID) ",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "sourceid",
             "description": "The ID of the list to assign this contact to.<br>**Possible values:** (ID) ",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/movecontact.json?key={YOUR_API_ID}\n  id=1\n  listid=24\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => '1',\n     'listid' => '24',\n );\n $results = $app->moveContact( $params );\n print_r($results);\n ?>\n"
           }
         ]
       },
       "parameters": []
     },
     "/EmailMarketing/GetContactTimeline": {
       "get": {
         "summary": "Contact Timeline",
         "tags": [
           "Contact"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "id": {
                       "type": "integer"
                     },
                     "email": {
                       "type": "string"
                     },
                     "timeline": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "key": {
                                 "type": "string"
                               },
                               "snippet": {
                                 "type": "string"
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               },
                               "details": {
                                 "type": "array",
                                 "items": {
                                   "type": "object",
                                   "properties": {
                                     "key": {
                                       "type": "string"
                                     },
                                     "label": {
                                       "type": "string"
                                     },
                                     "value": {
                                       "type": [
                                         "integer",
                                         "string"
                                       ]
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         },
                         "total": {
                           "type": "integer"
                         }
                       }
                     },
                     "utm": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "link": {
                                 "type": "string"
                               },
                               "utm": {
                                 "type": "object",
                                 "properties": {
                                   "campaign": {
                                     "type": "string"
                                   },
                                   "source": {
                                     "type": "string"
                                   },
                                   "medium": {
                                     "type": "string"
                                   },
                                   "term": {
                                     "type": "string"
                                   },
                                   "content": {
                                     "type": "string"
                                   }
                                 }
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         }
                       }
                     },
                     "automated": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "name": {
                                 "type": "string"
                               },
                               "type": {
                                 "type": "string"
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               },
                               "details": {
                                 "type": "array",
                                 "items": {
                                   "type": "object",
                                   "properties": {
                                     "key": {
                                       "type": "string"
                                     },
                                     "value": {
                                       "type": "string"
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         }
                       }
                     }
                   },
                   "x-examples": {
                     "example-1": {
                       "id": 123,
                       "email": "example@example.com",
                       "timeline": {
                         "data": [
                           {
                             "key": "email-campaign-sent",
                             "snippet": "Message: A test email campaign",
                             "timestamp": 1653576048,
                             "datetime": "2022-05-26 05:40 PM",
                             "details": [
                               {
                                 "key": "send-date",
                                 "label": "Send Date",
                                 "value": "2022-05-26 05:40PM"
                               },
                               {
                                 "key": "open-date",
                                 "label": "Opened",
                                 "value": "N/A"
                               },
                               {
                                 "key": "links-clicked",
                                 "label": "Links Clicked",
                                 "value": 0
                               }
                             ]
                           },
                           {
                             "key": "automation-triggered",
                             "snippet": "Automation Triggered: Send Automation",
                             "timestamp": 1648048427,
                             "datetime": "23-03-2022 05:13 PM",
                             "details": [
                               {
                                 "key": "steps",
                                 "label": "Steps",
                                 "value": 6
                               },
                               {
                                 "key": "actions",
                                 "label": "Actions",
                                 "value": 6
                               }
                             ]
                           }
                         ],
                         "count": 2,
                         "total": 2
                       },
                       "utm": {
                         "data": [
                           {
                             "link": "https://www.test.com/page?utm_source=facebook&utm_medium=mobile&utm_campaign=ad-camoaign",
                             "utm": {
                               "campaign": "ad-camoaign",
                               "source": "facebook",
                               "medium": "mobile",
                               "term": "",
                               "content": ""
                             },
                             "timestamp": 1656056618,
                             "datetime": "24-06-2022 10:43 AM"
                           }
                         ],
                         "count": 1
                       },
                       "automated": {
                         "data": [
                           {
                             "name": "Followup Message",
                             "type": "sms",
                             "timestamp": 1648047960,
                             "datetime": "23-03-2022 05:06 PM",
                             "details": [
                               {
                                 "key": "message",
                                 "value": "[#FIRSTNAME#], thanks for contacting us! Just sent you an email with more details."
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           },
                           {
                             "name": "Welcome Message",
                             "type": "email",
                             "timestamp": 1648047900,
                             "datetime": "23-03-2022 05:05 PM",
                             "details": [
                               {
                                 "key": "subject",
                                 "value": "Welcome to our company"
                               },
                               {
                                 "key": "open-date",
                                 "value": "27-03-2022 11:25 PM"
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           }
                         ],
                         "count": 2
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "id": 123,
                       "email": "example@example.com",
                       "timeline": {
                         "data": [
                           {
                             "key": "email-campaign-sent",
                             "snippet": "Message: A test email campaign",
                             "timestamp": 1653576048,
                             "datetime": "2022-05-26 05:40 PM",
                             "details": [
                               {
                                 "key": "send-date",
                                 "label": "Send Date",
                                 "value": "2022-05-26 05:40PM"
                               },
                               {
                                 "key": "open-date",
                                 "label": "Opened",
                                 "value": "N/A"
                               },
                               {
                                 "key": "links-clicked",
                                 "label": "Links Clicked",
                                 "value": 0
                               }
                             ]
                           },
                           {
                             "key": "automation-triggered",
                             "snippet": "Automation Triggered: Send Automation",
                             "timestamp": 1648048427,
                             "datetime": "23-03-2022 05:13 PM",
                             "details": [
                               {
                                 "key": "steps",
                                 "label": "Steps",
                                 "value": 6
                               },
                               {
                                 "key": "actions",
                                 "label": "Actions",
                                 "value": 6
                               }
                             ]
                           }
                         ],
                         "count": 2,
                         "total": 2
                       },
                       "utm": {
                         "data": [
                           {
                             "link": "https://www.test.com/page?utm_source=facebook&utm_medium=mobile&utm_campaign=ad-camoaign",
                             "utm": {
                               "campaign": "ad-camoaign",
                               "source": "facebook",
                               "medium": "mobile",
                               "term": "",
                               "content": ""
                             },
                             "timestamp": 1656056618,
                             "datetime": "24-06-2022 10:43 AM"
                           }
                         ],
                         "count": 1
                       },
                       "automated": {
                         "data": [
                           {
                             "name": "Followup Message",
                             "type": "sms",
                             "timestamp": 1648047960,
                             "datetime": "23-03-2022 05:06 PM",
                             "details": [
                               {
                                 "key": "message",
                                 "value": "[#FIRSTNAME#], thanks for contacting us! Just sent you an email with more details."
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           },
                           {
                             "name": "Welcome Message",
                             "type": "email",
                             "timestamp": 1648047900,
                             "datetime": "23-03-2022 05:05 PM",
                             "details": [
                               {
                                 "key": "subject",
                                 "value": "Welcome to our company"
                               },
                               {
                                 "key": "open-date",
                                 "value": "27-03-2022 11:25 PM"
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           }
                         ],
                         "count": 2
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetContactTimeline",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": " id",
             "description": "The ID of the contact to return his timeline activities.<br>**Possible values:** (ID) ",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "include",
             "description": "Comma separated keys to return other details with the timeline activities. <br>**Possible values:** utm | automated "
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcontacttimeline.json?key={YOUR_API_ID}&id=3"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => '1',\n     'listid' => '24',\n );\n $results = $app->moveContact( $params );\n print_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/GetContactTimelineByEmailAddress": {
       "get": {
         "summary": "Contact Timeline By Email Address",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "id": {
                       "type": "integer"
                     },
                     "email": {
                       "type": "string"
                     },
                     "timeline": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "key": {
                                 "type": "string"
                               },
                               "snippet": {
                                 "type": "string"
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               },
                               "details": {
                                 "type": "array",
                                 "items": {
                                   "type": "object",
                                   "properties": {
                                     "key": {
                                       "type": "string"
                                     },
                                     "label": {
                                       "type": "string"
                                     },
                                     "value": {
                                       "type": [
                                         "integer",
                                         "string"
                                       ]
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         },
                         "total": {
                           "type": "integer"
                         }
                       }
                     },
                     "utm": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "link": {
                                 "type": "string"
                               },
                               "utm": {
                                 "type": "object",
                                 "properties": {
                                   "campaign": {
                                     "type": "string"
                                   },
                                   "source": {
                                     "type": "string"
                                   },
                                   "medium": {
                                     "type": "string"
                                   },
                                   "term": {
                                     "type": "string"
                                   },
                                   "content": {
                                     "type": "string"
                                   }
                                 }
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         }
                       }
                     },
                     "automated": {
                       "type": "object",
                       "properties": {
                         "data": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "name": {
                                 "type": "string"
                               },
                               "type": {
                                 "type": "string"
                               },
                               "timestamp": {
                                 "type": "integer"
                               },
                               "datetime": {
                                 "type": "string"
                               },
                               "details": {
                                 "type": "array",
                                 "items": {
                                   "type": "object",
                                   "properties": {
                                     "key": {
                                       "type": "string"
                                     },
                                     "value": {
                                       "type": "string"
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "count": {
                           "type": "integer"
                         }
                       }
                     }
                   },
                   "x-examples": {
                     "example-1": {
                       "id": 123,
                       "email": "example@example.com",
                       "timeline": {
                         "data": [
                           {
                             "key": "email-campaign-sent",
                             "snippet": "Message: A test email campaign",
                             "timestamp": 1653576048,
                             "datetime": "2022-05-26 05:40 PM",
                             "details": [
                               {
                                 "key": "send-date",
                                 "label": "Send Date",
                                 "value": "2022-05-26 05:40PM"
                               },
                               {
                                 "key": "open-date",
                                 "label": "Opened",
                                 "value": "N/A"
                               },
                               {
                                 "key": "links-clicked",
                                 "label": "Links Clicked",
                                 "value": 0
                               }
                             ]
                           },
                           {
                             "key": "automation-triggered",
                             "snippet": "Automation Triggered: Send Automation",
                             "timestamp": 1648048427,
                             "datetime": "23-03-2022 05:13 PM",
                             "details": [
                               {
                                 "key": "steps",
                                 "label": "Steps",
                                 "value": 6
                               },
                               {
                                 "key": "actions",
                                 "label": "Actions",
                                 "value": 6
                               }
                             ]
                           }
                         ],
                         "count": 2,
                         "total": 2
                       },
                       "utm": {
                         "data": [
                           {
                             "link": "https://www.test.com/page?utm_source=facebook&utm_medium=mobile&utm_campaign=ad-camoaign",
                             "utm": {
                               "campaign": "ad-camoaign",
                               "source": "facebook",
                               "medium": "mobile",
                               "term": "",
                               "content": ""
                             },
                             "timestamp": 1656056618,
                             "datetime": "24-06-2022 10:43 AM"
                           }
                         ],
                         "count": 1
                       },
                       "automated": {
                         "data": [
                           {
                             "name": "Followup Message",
                             "type": "sms",
                             "timestamp": 1648047960,
                             "datetime": "23-03-2022 05:06 PM",
                             "details": [
                               {
                                 "key": "message",
                                 "value": "[#FIRSTNAME#], thanks for contacting us! Just sent you an email with more details."
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           },
                           {
                             "name": "Welcome Message",
                             "type": "email",
                             "timestamp": 1648047900,
                             "datetime": "23-03-2022 05:05 PM",
                             "details": [
                               {
                                 "key": "subject",
                                 "value": "Welcome to our company"
                               },
                               {
                                 "key": "open-date",
                                 "value": "27-03-2022 11:25 PM"
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           }
                         ],
                         "count": 2
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "id": 123,
                       "email": "example@example.com",
                       "timeline": {
                         "data": [
                           {
                             "key": "email-campaign-sent",
                             "snippet": "Message: A test email campaign",
                             "timestamp": 1653576048,
                             "datetime": "2022-05-26 05:40 PM",
                             "details": [
                               {
                                 "key": "send-date",
                                 "label": "Send Date",
                                 "value": "2022-05-26 05:40PM"
                               },
                               {
                                 "key": "open-date",
                                 "label": "Opened",
                                 "value": "N/A"
                               },
                               {
                                 "key": "links-clicked",
                                 "label": "Links Clicked",
                                 "value": 0
                               }
                             ]
                           },
                           {
                             "key": "automation-triggered",
                             "snippet": "Automation Triggered: Send Automation",
                             "timestamp": 1648048427,
                             "datetime": "23-03-2022 05:13 PM",
                             "details": [
                               {
                                 "key": "steps",
                                 "label": "Steps",
                                 "value": 6
                               },
                               {
                                 "key": "actions",
                                 "label": "Actions",
                                 "value": 6
                               }
                             ]
                           }
                         ],
                         "count": 2,
                         "total": 2
                       },
                       "utm": {
                         "data": [
                           {
                             "link": "https://www.test.com/page?utm_source=facebook&utm_medium=mobile&utm_campaign=ad-camoaign",
                             "utm": {
                               "campaign": "ad-camoaign",
                               "source": "facebook",
                               "medium": "mobile",
                               "term": "",
                               "content": ""
                             },
                             "timestamp": 1656056618,
                             "datetime": "24-06-2022 10:43 AM"
                           }
                         ],
                         "count": 1
                       },
                       "automated": {
                         "data": [
                           {
                             "name": "Followup Message",
                             "type": "sms",
                             "timestamp": 1648047960,
                             "datetime": "23-03-2022 05:06 PM",
                             "details": [
                               {
                                 "key": "message",
                                 "value": "[#FIRSTNAME#], thanks for contacting us! Just sent you an email with more details."
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           },
                           {
                             "name": "Welcome Message",
                             "type": "email",
                             "timestamp": 1648047900,
                             "datetime": "23-03-2022 05:05 PM",
                             "details": [
                               {
                                 "key": "subject",
                                 "value": "Welcome to our company"
                               },
                               {
                                 "key": "open-date",
                                 "value": "27-03-2022 11:25 PM"
                               },
                               {
                                 "key": "click-date",
                                 "value": "-"
                               }
                             ]
                           }
                         ],
                         "count": 2
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-GetContactTimelineByEmailAddress",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "Email",
             "description": "The email address for the contact to return his timeline activities.<br>**Possible values:**  (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "Include",
             "description": "Comma separated keys to return other details with the timeline activities.<br>**Possible values:**  utm | automated"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcontacttimelinebyemailaddress.json?key={YOUR_API_ID}&id=3\n"
           }
         ],
         "tags": [
           "Contact"
         ]
       }
     },
     "/EmailMarketing/GetAudiences": {
       "get": {
         "summary": "Audiences",
         "tags": [
           "Email Marketing"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "audiences": {
                         "count": 41,
                         "items": [
                           {
                             "id": "148",
                             "name": "2014 NYC hotel show"
                           },
                           {
                             "id": "157",
                             "name": "Startup Alley NYC"
                           },
                           {
                             "id": "180",
                             "name": "My Autoresponder Audience"
                           },
                           {
                             "id": "480",
                             "name": "Content Automation Center Funnel"
                           },
                           {
                             "id": "481",
                             "name": "Content Automation Bottom Funnel"
                           },
                           {
                             "id": "482",
                             "name": "Birthday Audience"
                           },
                           {
                             "id": "524",
                             "name": "TestYogaShopFunnelForm"
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "count": {
                       "type": "integer"
                     },
                     "items": {
                       "type": "array",
                       "items": [
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         },
                         {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         }
                       ]
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "audiences": {
                         "count": 41,
                         "items": [
                           {
                             "id": "148",
                             "name": "2014 NYC hotel show"
                           },
                           {
                             "id": "157",
                             "name": "Startup Alley NYC"
                           },
                           {
                             "id": "180",
                             "name": "My Autoresponder Audience"
                           },
                           {
                             "id": "480",
                             "name": "Content Automation Center Funnel"
                           },
                           {
                             "id": "481",
                             "name": "Content Automation Bottom Funnel"
                           },
                           {
                             "id": "482",
                             "name": "Birthday Audience"
                           },
                           {
                             "id": "524",
                             "name": "TestYogaShopFunnelForm"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetAudiences",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getaudiences.json?key={YOUR_API_ID}"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new EmailMarketingWS($user_key);\n $results = $app->getMyAudiences();\n print_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/GetLists": {
       "get": {
         "summary": "Lists",
         "tags": [
           "Email Marketing"
         ],
         "responses": {
           "200": {
             "description": "Successful Operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "description": "Check The Response Sample."
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "lists": {
                         "count": 41,
                         "items": [
                           {
                             "id": "148",
                             "name": "2014 NYC  hotel show",
                             "form_title": "2014 NYC  hotel show",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": " Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME] [ADDRESS]",
                             "success_email": " Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME] [ADDRESS]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "",
                             "doubleOptin": "0",
                             "notify_email": "Example@gmail.com",
                             "creation_date": "04/10/2014 00:00"
                           },
                           {
                             "id": "157",
                             "name": "Startup Alley NYC",
                             "form_title": "Untitled Form",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME] [ADDRESS]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME] [ADDRESS]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "You have already been subscribed to this list!",
                             "doubleOptin": "0",
                             "notify_email": "",
                             "creation_date": "04/15/2014 00:00"
                           },
                           {
                             "id": "180",
                             "name": "My Autoresponder List",
                             "form_title": "Untitled Form",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME] [ADDRESS]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME] [ADDRESS]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "",
                             "doubleOptin": "0",
                             "notify_email": "",
                             "creation_date": "04/22/2014 00:00"
                           },
                           {
                             "id": "480",
                             "name": "Content Automation Center Funnel",
                             "form_title": "testing automation",
                             "email_subject": "Subscription to testing automation",
                             "reply_to": "no-reply@vbout.com",
                             "from_email": "Example@gmail.com",
                             "from_name": "Vbout",
                             "confimation_email": " Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "You have already been subscribed to this list!",
                             "doubleOptin": "0",
                             "notify_email": "Example@gmail.com",
                             "creation_date": "09/29/2014 00:00"
                           },
                           {
                             "id": "481",
                             "name": "Content Automation Bottom Funnel",
                             "form_title": "testing automation",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "You have already been subscribed to this list!",
                             "doubleOptin": "0",
                             "notify_email": "",
                             "creation_date": "09/30/2014 00:00"
                           },
                           {
                             "id": "482",
                             "name": "Birthday List",
                             "form_title": "testing automation",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "You have already been subscribed to this list!",
                             "doubleOptin": "0",
                             "notify_email": "",
                             "creation_date": "10/01/2014 00:00"
                           },
                           {
                             "id": "524",
                             "name": "TestYogaShopFunnelForm",
                             "form_title": "Untitled Form",
                             "email_subject": "",
                             "reply_to": "",
                             "from_email": "",
                             "from_name": "",
                             "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME]",
                             "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME]",
                             "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                             "success_message": "Your subscription is now complete!",
                             "error_message": "You have already been subscribed to this list!",
                             "doubleOptin": "0",
                             "notify_email": "",
                             "creation_date": "11/06/2014 00:00"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetLists",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getlists.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$results = $app->getMyLists();\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/GetList": {
       "get": {
         "summary": "List",
         "tags": [
           "Email Marketing"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "description": "Check The Response Sample."
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "list": {
                         "id": "524",
                         "name": "Landing page subscription form",
                         "form_title": "Newsletter Signup",
                         "email_subject": "",
                         "reply_to": "",
                         "from_email": "example@vbout.com",
                         "from_name": "A person from Vbout",
                         "confimation_email": "Please click on the link below to confirm your subscription.[CONFIRMATION_URL][BUSINESS_NAME]",
                         "success_email": "Your email is now confirmed! we are excited to have you on our list. We will be in touch soon.[BUSINESS_NAME]",
                         "confimation_message": "Your signup is almost complete! Please check your email for a confirmation message.",
                         "success_message": "Your subscription is now complete!",
                         "error_message": "You have already been subscribed to this list!",
                         "doubleOptin": "0",
                         "notify_email": "",
                         "creation_date": "11/06/2014 00:00",
                         "fields": {
                           "125": "First Name",
                           "325": "Date Of Birth",
                           "1204": "Last Name"
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetList",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the list to return.<br>**Possible values:**   (ID)",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getlist.json?key={YOUR_API_ID}&id=524"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$results = $app->getMyLists();\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/AddList": {
       "post": {
         "summary": "Add List",
         "operationId": "post-EmailMarketing-AddList",
         "tags": [
           "Email Marketing"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/addlist.json?key={YOUR_API_ID}\n   name=List 1\n   email_subject=Hello World\n   reply_to=no-reply@example.com\n   fromemail=info@example.com\n   from_name= Name \n   notify=Notify me of new subscribers.\n   notify_email=info@example.com\n   success_email=info@example.com\n   success_message=Subscription Success Message\n   error_message=Subscription Error Message\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\n$app = new EmailMarketingWS($user_key);\n$params = array(\n    'name' => 'List 1',\n    'email_subject' => 'Hello World',\n    'reply_to' => 'no-reply@example.com',\n    'fromemail' => 'info@example.com',\n    'from_name' => ' Name ',\n    'notify' => 'Notify me of new subscribers.',\n    'notify_email' => 'info@example.com',\n    'success_email' => 'info@example.com',\n    'success_message' => 'Subscription Success Message',\n    'error_message' => 'Subscription Error Message',\n);\n$results = $app->addNewList( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "name",
             "description": "The name of the list.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "email_subject",
             "description": "The default subscription subject.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "reply_to",
             "description": "The Reply to email of the list.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "format": "email",
               "default": "None"
             },
             "in": "query",
             "name": "fromemail",
             "description": "The From email of the list.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "from_name",
             "description": "The From name of the list.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "doubleOptin",
             "description": "Email confirmation required (Double opt-in)?<br>**Possible values:**  0 | 1"
           },
           {
             "schema": {
               "type": "string"
             },
             "in": "query",
             "name": "notify",
             "description": "Notify me of new subscribers.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "notify_email",
             "description": "Notification Email.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "format": "email",
               "default": "None"
             },
             "in": "query",
             "name": "success_email",
             "description": "Subscription Success Email.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "success_message",
             "description": "Subscription Success Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "error_message",
             "description": "Subscription Error Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "confirmation_email",
             "description": "Confirmation Email Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "confirmation_message",
             "description": "Confirmation Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "communications",
             "description": "Turn off Communications? (0-No | 1-Yes)<br>**Possible values:** 0 | 1"
           }
         ]
       }
     },
     "/EmailMarketing/Editlist": {
       "post": {
         "summary": "Edit List",
         "operationId": "post-EmailMarketing-Editlist",
         "tags": [
           "Email Marketing"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/editlist.json?key={YOUR_API_ID}\n   id=1\n   name=List 1\n   email_subject=Hello World\n   reply_to=no-reply@example.com\n   fromemail=info@example.com\n   from_name= Name \n   notify=Notify me of new subscribers.\n   notify_email=info@example.com\n   success_email=info@example.com\n   success_message=Subscription Success Message\n   error_message=Subscription Error Message\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new EmailMarketingWS($user_key);\n$params = array(\n    'id' => '1',\n    'name' => 'List 1',\n    'email_subject' => 'Hello World',\n    'reply_to' => 'no-reply@example.com',\n    'fromemail' => 'info@example.com',\n    'from_name' => ' Name ',\n    'notify' => 'Notify me of new subscribers.',\n    'notify_email' => 'info@example.com',\n    'success_email' => 'info@example.com',\n    'success_message' => 'Subscription Success Message',\n    'error_message' => 'Subscription Error Message',\n);\n$results = $app->updateList( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The id of the list.<br>**Possible values:**  (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "name",
             "description": "The name of the list.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "email_subject",
             "description": "The default subject line of subscription.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "format": "email",
               "default": "None"
             },
             "in": "query",
             "name": "reply_to",
             "description": "The Reply to email of the list.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "format": "email",
               "default": "None"
             },
             "in": "query",
             "name": "fromemail",
             "description": "The From email of the list.<br>**Possible values:**  (Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "from_name",
             "description": "The From name of the list.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "doubleOptin",
             "description": "Email confirmation required (Double opt-in)?.<br>**Possible values:**  0 | 1"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "notify",
             "description": "Notify me of new subscribers.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "notify_email",
             "description": "Notification Email.<br>**Possible values:**(Email)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "email"
             },
             "in": "query",
             "name": "success_email",
             "description": "Subscription Success Email.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "success_message",
             "description": "Subscription Success Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "error_message",
             "description": "Subscription Error Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "confirmation_email",
             "description": "Confirmation Email Message.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "Confirmation Email Message.",
             "description": "Confirmation Message.<br>**Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "communications",
             "description": "Turn off Communications? (0-No | 1-Yes)<br>**Possible values:** 0 | 1"
           }
         ]
       }
     },
     "/EmailMarketing/DeleteList": {
       "delete": {
         "summary": "Delete List",
         "operationId": "delete-EmailMarketing-DeleteList",
         "tags": [
           "Email Marketing"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/deletelist.json?key={YOUR_API_ID}\n id=320\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new EmailMarketingWS($user_key);\n$id = '320';\n$results = $app->removeList($id);\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the list to delete.<br>**Possible values:** (ID)"
           }
         ]
       }
     },
     "/EmailMarketing/AddActivity": {
       "parameters": [],
       "post": {
         "summary": "Add Activity",
         "operationId": "post-EmailMarketing-AddActivity",
         "tags": [
           "Email Marketing"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/addactivity.json?key={YOUR_API_ID}\n   id=xxxxx\n   description=this is my first activity\n   datetime=2022-10-04 08:03\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/EmailMarketingWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new EmailMarketingWS($user_key);\n$id = '320';\n$results = $app->removeList($id);\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The id of the contact.<br> **Possible values:** (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "description",
             "required": true,
             "description": "The description of the activity.<br> **Possible values:** (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "date-time",
               "pattern": "Y-m-d h:m"
             },
             "in": "query",
             "required": true,
             "name": "datetime",
             "description": "The date and time to activity.<br> **Possible values:** (DateTime)"
           }
         ]
       }
     },
     "/EmailMarketing/AddTag": {
       "post": {
         "summary": "Add Tag",
         "operationId": "post-EmailMarketing-AddTag",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Note:** List of tags can be sent as a batch, separated by a comma. Either email or id can be used.",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/addtag.json?key={YOUR_API_ID}\n   id=xxxxx\n   tagname=this is my first tag\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => 'xxxxx',\n     'tagname' => 'this is my first tag',\n );\n $results = $app->addTag( $params );\n print_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The id of the contact.<br>**Possible values:** (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "email",
             "required": true,
             "description": "The email of the contact.<br>**Possible values:**  (text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "tagname",
             "description": "Tag(s) to be added.<br>**Possible values:**  (Text)"
           }
         ],
         "tags": [
           "Email Marketing"
         ]
       }
     },
     "/EmailMarketing/RemoveTag": {
       "parameters": [],
       "delete": {
         "summary": "Remove Tag",
         "operationId": "delete-EmailMarketing-RemoveTag",
         "tags": [
           "Email Marketing"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Note:**  List of tags can be sent as a batch, separated by a comma. Either email or id can be used",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The id of the contact.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "email",
             "description": "The email of the contact.<br>**Possible values:**  (text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "tagname",
             "description": "Tag(s) to be added.<br>**Possible values:**  (text)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/emailmarketing/removetag.json?key={YOUR_API_ID}\n  id=xxxxx\n  tagname=this is my first tag\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new EmailMarketingWS($user_key);\n $params = array(\n     'id' => 'xxxxx',\n     'tagname' => 'this is my first tag',\n );\n $results = $app->addTag( $params );\n print_r($results);\n?>\n"
           }
         ]
       }
     },
     "/EmailMarketing/GetCoupon": {
       "get": {
         "summary": "Coupon",
         "tags": [
           "Email Marketing"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "coupons": [
                         {
                           "id": "15817148",
                           "email": "john@doe.com",
                           "couponcode": "XXXXXXXXXXXXXX",
                           "couponredeemed": "0",
                           "couponredeemedon": "N/A"
                         }
                       ]
                     }
                   },
                   "properties": {
                     "coupons": {
                       "type": "array",
                       "items": {
                         "type": "object",
                         "properties": {
                           "id": {
                             "type": "integer"
                           },
                           "email": {
                             "type": "string"
                           },
                           "couponcode": {
                             "type": "string"
                           },
                           "couponredeemed": {
                             "type": "integer"
                           },
                           "couponredeemedon": {
                             "type": "string"
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "coupons": [
                         {
                           "id": "15817148",
                           "email": "john@doe.com",
                           "couponcode": "XXXXXXXXXXXXXX",
                           "couponredeemed": "0",
                           "couponredeemedon": "N/A"
                         }
                       ]
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-EmailMarketing-GetCoupon",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "john@doe.com"
             },
             "in": "query",
             "required": true,
             "description": "The email of the contact to return coupons of.<br> **Possible values:**  (Email)",
             "name": "email"
           },
           {
             "schema": {
               "type": "string",
               "default": "1254"
             },
             "in": "query",
             "name": "campaignid",
             "description": "The ID of the campaign containing coupons.<br> **Possible values:**  (Campaign id)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/emailmarketing/getcoupon.json?key={YOUR_API_ID}&email=john@doe.com\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/EmailMarketingWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new EmailMarketingWS($user_key);\n $email = 'john@doe.com';\n $results = $app->getCoupon($email);\n print_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/User/Lists": {
       "get": {
         "summary": "Lists",
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "users": {
                       "type": "object",
                       "properties": {
                         "items": {
                           "type": "object",
                           "properties": {
                             "34": {
                               "type": "object",
                               "properties": {
                                 "users": {
                                   "type": "object",
                                   "properties": {
                                     "34": {
                                       "type": "object",
                                       "properties": {
                                         "fullname": {
                                           "type": "string"
                                         },
                                         "username": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 }
                               }
                             },
                             "193": {
                               "type": "object",
                               "properties": {
                                 "users": {
                                   "type": "object",
                                   "properties": {
                                     "45": {
                                       "type": "object",
                                       "properties": {
                                         "fullname": {
                                           "type": "string"
                                         },
                                         "username": {
                                           "type": "string"
                                         },
                                         "group": {
                                           "type": "string"
                                         },
                                         "status": {
                                           "type": "string"
                                         }
                                       }
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "users": {
                         "count": 2,
                         "items": {
                           "34": {
                             "users": {
                               "34": {
                                 "fullname": "John Quil",
                                 "username": "John Quil@example.com"
                               },
                               "...": null
                             }
                           },
                           "193": {
                             "users": {
                               "45": {
                                 "fullname": "Test",
                                 "username": "test22@yopmail.com",
                                 "group": "-",
                                 "status": "Active"
                               },
                               "...": null
                             }
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-User-Lists",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "businessid",
             "description": "The ID of the business if it's an agency to return its contacts.<br> **Possible values:**  (ID)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/user/lists.json?key={YOUR_API_ID}&businessid=124\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/UserWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new UserWS($user_key);\n $params = array(\n     'businessid' => '124',\n );\n $results = $app->getusers( $params );\n print_r($results);\n  ?>\n"
           }
         ],
         "tags": [
           "Users & Workflow"
         ]
       }
     },
     "/User/Managers": {
       "get": {
         "summary": "Managers",
         "tags": [
           "Users & Workflow"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "users": {
                         "count": 7,
                         "items": [
                           {
                             "id": "2",
                             "fullname": "Frank N. Stein",
                             "email": "Frank16@yopmail.com",
                             "status": "Active"
                           },
                           {
                             "id": "10",
                             "fullname": "Isabelle Ringing",
                             "email": "Isab.e16@yopmail.com",
                             "status": "Active"
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "users": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": [
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "fullname": {
                                   "type": "string"
                                 },
                                 "email": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 }
                               }
                             },
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "fullname": {
                                   "type": "string"
                                 },
                                 "email": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 }
                               }
                             }
                           ]
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "users": {
                         "count": 7,
                         "items": [
                           {
                             "id": "2",
                             "fullname": "Hank R. Cheef",
                             "email": "Hank3000@yopmail.com",
                             "status": "Active"
                           },
                           {
                             "id": "10",
                             "fullname": "Oscar Nommanee",
                             "email": "oscarnom773@yopmail.com",
                             "status": "Active"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-User-Managers",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n- - -\n**Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/user/managers.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/UserWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new UserWS($user_key);\n $results = $app->getManagers();\n print_r($results);\n?>\n"
           }
         ]
       }
     },
     "/User/Status": {
       "post": {
         "summary": "Status",
         "operationId": "post-User-Status",
         "tags": [
           "Users & Workflow"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the user to change status.<br>**Possible values:**  (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "User"
             },
             "in": "query",
             "name": "type",
             "required": true,
             "description": "The type of the user.<br>**Possible values:**  user | manager"
           },
           {
             "schema": {
               "type": "string",
               "default": "enable"
             },
             "in": "query",
             "name": "status",
             "required": true,
             "description": "The status of the user.<br>**Possible values:**  enable | disable"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/status.json?key={YOUR_API_ID}\n   id=1\n   type=user\n   status=0\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/UserWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new UserWS($user_key);\n$params = array(\n    'id' => '1',\n    'type' => 'user',\n    'status' => '0',\n);\n$results = $app->changeStatus( $params );\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/User/Add": {
       "post": {
         "summary": "Add",
         "operationId": "post-User-Add",
         "tags": [
           "Users & Workflow"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/add.json?key={YOUR_API_ID}\n   fullname=John Smith\n   username=john@example.com\n   password=user123\n   type=user\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/UserWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new UserWS($user_key);\n$params = array(\n    'fullname' => 'John Smith',\n    'username' => 'john@example.com',\n    'password' => 'user123',\n    'type' => 'user',\n);\n$results = $app->addNewUser( $params );\nprint_r($results);\n  ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "fullname",
             "required": true,
             "description": "The name of the user.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string"
             },
             "in": "query",
             "name": "username",
             "description": "The username of the user.<br>**Possible values:**  (Email Address)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "password",
             "description": "The password of the user.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "User"
             },
             "in": "query",
             "required": true,
             "name": "type",
             "description": "The type of the user.<br>**Possible values:**  user | manager"
           },
           {
             "schema": {
               "type": "string",
               "default": "0"
             },
             "in": "query",
             "name": "group",
             "description": "The group id of the user.<br>**Possible values:**   (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "Null"
             },
             "in": "query",
             "name": "permissions",
             "description": "Optional<br>`Required`: if **no group** is selected.<br>The permissions of the user. (comma-separated values) <br>**Possible values:**   all | reputation_center | foursquare | pinterest | social_media | email_marketing | master_reporting | users_and_workflow | user_groups | smart_calendar | site_builder | asset_manager | task_manager | notes | social_tracker | google_analytics | email_automation_workflow | live_hashtags | goal_conversion_tracking | expedia_affiliate_network | behavioral_webhooks | lead_scoring | landingpages | sms_automation | heatmap | email_test | salesforce_sync | browser_push | hubspot_sync | zoho_sync | pipeline_manager | email_inbox_sync | campaign_groups | webinars | content_bank | meeting_sch | insightly_sync | ftp_sync | simplifi_reports | custom_smtp | call_center"
           }
         ]
       }
     },
     "/User/Edit": {
       "post": {
         "summary": "Edit",
         "operationId": "post-User-Edit",
         "tags": [
           "Users & Workflow"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/edit.json?key={YOUR_API_ID}\n   fullname=John Smith\n   username=john@example.com\n   password=user123\n   type=user\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/UserWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new UserWS($user_key);\n$params = array(\n    'fullname' => 'John Smith',\n    'username' => 'john@example.com',\n    'password' => 'user123',\n    'type' => 'user',\n);\n$results = $app->updateUser( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the user.<br>**Possible values:**  (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "fullname",
             "required": true,
             "description": "The name of the user.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "username",
             "required": true,
             "description": "The username of the user.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "User"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the user.<br>**Possible values:**   (user | manager)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "password",
             "description": "The password of the user.<br>**Possible values:**    (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "0"
             },
             "in": "query",
             "name": "group",
             "description": "The group id of the user.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "Null"
             },
             "in": "query",
             "name": "permissions",
             "description": "Optional<br>`Required`: if **no group** is selected.<br>The permissions of the user. (comma-separated values) <br>**Possible values:**  all | reputation_center | foursquare | pinterest | social_media | email_marketing | master_reporting | users_and_workflow | user_groups | smart_calendar | site_builder | asset_manager | task_manager | notes | social_tracker | google_analytics | email_automation_workflow | live_hashtags | goal_conversion_tracking | expedia_affiliate_network | behavioral_webhooks | lead_scoring | landingpages | sms_automation | heatmap | email_test | salesforce_sync | browser_push | hubspot_sync | zoho_sync | pipeline_manager | email_inbox_sync | campaign_groups | webinars | content_bank | meeting_sch | insightly_sync | ftp_sync | simplifi_reports | custom_smtp | call_center"
           }
         ]
       }
     },
     "/User/Delete": {
       "delete": {
         "summary": "Delete",
         "operationId": "delete-User-Delete",
         "tags": [
           "Users & Workflow"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the user to delete.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "User"
             },
             "in": "query",
             "description": "The type of the user.<br>**Possible values:**  user | manager",
             "name": "type",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/delete.json?key={YOUR_API_ID}\n  id=1\n  type=user\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/UserWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new UserWS($user_key);\n $params = array(\n     'id' => '1',\n     'type' => 'user',\n );\n $results = $app->removeUser( $params );\n print_r($results);\n  ?>\n"
           }
         ]
       }
     },
     "/User/Groups": {
       "get": {
         "summary": "Groups",
         "tags": [
           "Users & Workflow"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "groups": {
                         "count": 3,
                         "items": [
                           {
                             "id": "4",
                             "name": "Sales Team #Chicago",
                             "status": "Active"
                           },
                           {
                             "id": "5",
                             "name": "Sales Team #New York",
                             "status": "Active"
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "groups": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": [
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "name": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 }
                               }
                             },
                             {
                               "type": "object",
                               "properties": {
                                 "id": {
                                   "type": "integer"
                                 },
                                 "name": {
                                   "type": "string"
                                 },
                                 "status": {
                                   "type": "string"
                                 }
                               }
                             }
                           ]
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "groups": {
                         "count": 3,
                         "items": [
                           {
                             "id": "4",
                             "name": "Sales Team #Chicago",
                             "status": "Active"
                           },
                           {
                             "id": "5",
                             "name": "Sales Team #New York",
                             "status": "Active"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-User-Groups",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/user/groups.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?ph\nrequire_once('../PATH/TO/services/UserWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new UserWS($user_key);\n$results = $app->getGroups();\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/User/GroupDelete": {
       "delete": {
         "summary": "Group Delete",
         "operationId": "delete-User-GroupDelete",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "tags": [
           "Users & Workflow"
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/groupdelete.json?key={YOUR_API_ID}\n   id=1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/UserWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new UserWS($user_key);\n$params = array(\n    'id' => '1',\n);\n$results = $app->removeGroup( $params );\nprint_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the group to delete.<br>**Possible values:**  (ID)",
             "required": true
           }
         ]
       }
     },
     "/User/GroupStatus": {
       "get": {
         "summary": "Group Status",
         "tags": [
           "Users & Workflow"
         ],
         "responses": {},
         "operationId": "get-User-GroupStatus",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/user/groupstatus.json?key={YOUR_API_ID}\n   id=1\n   status=0\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/UserWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new UserWS($user_key);\n $params = array(\n     'id' => '1',\n     'status' => '0',\n );\n $results = $app->changeGroupStatus( $params );\n print_r($results);\n  ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "required": true,
             "description": "The ID of the group to change status.<br>**Possible values:**   (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "enable"
             },
             "in": "query",
             "name": "status",
             "required": true,
             "description": "The status of the group.<br>**Possible values:**    enable | disable"
           }
         ]
       }
     },
     "/Goal/Lists": {
       "get": {
         "summary": "Lists",
         "tags": [
           "Goals"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "goals": {
                         "count": 8,
                         "items": [
                           {
                             "id": "41",
                             "name": "Cart conversion (All Links)",
                             "goal_value": {
                               "type": "Fixed",
                               "value": "80.0000"
                             },
                             "type": "Event Triggered",
                             "event_type": "Link(s) Clicked",
                             "event_link_rule": "All of these link(s) clicked",
                             "links": [
                               "http://yogashop.com/index.php?route=information/contact",
                               "http://yogashop.com/index.php?route=blog/blog"
                             ],
                             "has_action": "Yes",
                             "action": {
                               "id": "69",
                               "name": "Action is deleted!"
                             }
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "goals": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "id": {
                                 "type": "integer"
                               },
                               "name": {
                                 "type": "string"
                               },
                               "goal value": {
                                 "type": "object",
                                 "properties": {
                                   "type": {
                                     "type": "string"
                                   },
                                   "value": {
                                     "type": "integer"
                                   }
                                 }
                               },
                               "type": {
                                 "type": "string"
                               },
                               "event_type": {
                                 "type": "string"
                               },
                               "event_link_rule": {
                                 "type": "string"
                               },
                               "links": {
                                 "type": "array",
                                 "items": {
                                   "type": "string"
                                 }
                               },
                               "url": {
                                 "type": "string"
                               },
                               "has_action": {
                                 "type": "string"
                               },
                               "action": {
                                 "type": "object",
                                 "properties": {
                                   "id": {
                                     "type": "integer"
                                   },
                                   "name": {
                                     "type": "string"
                                   }
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "goals": {
                         "count": 8,
                         "items": [
                           {
                             "id": "41",
                             "name": "Cart conversion (All Links)",
                             "goal_value": {
                               "type": "Fixed",
                               "value": "80.0000"
                             },
                             "type": "Event Triggered",
                             "event_type": "Link(s) Clicked",
                             "event_link_rule": "All of these link(s) clicked",
                             "links": [
                               "http://yogashop.com/index.php?route=information/contact",
                               "http://yogashop.com/index.php?route=blog/blog"
                             ],
                             "has_action": "Yes",
                             "action": {
                               "id": "69",
                               "name": "Action is deleted!"
                             }
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-Goal-Lists",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/goal/lists.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/GoalWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new GoalWS($user_key);\n$results = $app->getGoals();\nprint_r($results);\n?>\n"
           }
         ]
       }
     },
     "/Goal/ListByDomain": {
       "get": {
         "summary": "List By Domain",
         "tags": [
           "Goals"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "goals": {
                         "count": 7,
                         "items": [
                           {
                             "id": "41",
                             "name": "Test Goal Action (All Links)",
                             "goal_value": {
                               "type": "Fixed",
                               "value": "0.0000"
                             },
                             "type": "Event Triggered",
                             "event_type": "Link(s) Clicked",
                             "event_link_rule": "All of these link(s) clicked",
                             "links": [
                               "http://yogashop.com/index.php?route=information/contact",
                               "http://yogashop.com/index.php?route=blog/blog"
                             ],
                             "has_action": "Yes",
                             "action": {
                               "id": "69",
                               "name": "Action is deleted!"
                             }
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "goals": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "id": {
                                 "type": "integer"
                               },
                               "name": {
                                 "type": "string"
                               },
                               "goal_value": {
                                 "type": "object",
                                 "properties": {
                                   "type": {
                                     "type": "string"
                                   },
                                   "value": {
                                     "type": "integer"
                                   }
                                 }
                               },
                               "type": {
                                 "type": "string"
                               },
                               "event_type": {
                                 "type": "string"
                               },
                               "links": {
                                 "type": "array",
                                 "items": {}
                               },
                               "url": {
                                 "type": "string"
                               },
                               "has_action": {
                                 "type": "string"
                               },
                               "action": {
                                 "type": "object",
                                 "properties": {
                                   "id": {
                                     "type": "integer"
                                   },
                                   "name": {
                                     "type": "string"
                                   }
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "goals": {
                         "count": 7,
                         "items": [
                           {
                             "id": "41",
                             "name": "Test Goal Action (All Links)",
                             "goal_value": {
                               "type": "Fixed",
                               "value": "0.0000"
                             },
                             "type": "Event Triggered",
                             "event_type": "Link(s) Clicked",
                             "event_link_rule": "All of these link(s) clicked",
                             "links": [
                               "http://yogashop.com/index.php?route=information/contact",
                               "http://yogashop.com/index.php?route=blog/blog"
                             ],
                             "has_action": "Yes",
                             "action": {
                               "id": "69",
                               "name": "Action is deleted!"
                             }
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-Goal-ListByDomain",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/goal/listbydomain.json?key={YOUR_API_ID}&domainid=41\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/GoalWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new GoalWS($user_key);\n$params = array(\n    'domainid' => '41',\n);\n$results = $app->getGoalsByDomain( $params );\nprint_r($results);\n ?>\n"
           }
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "domainid",
             "required": true,
             "description": "The ID of the domain to return its goals.<br>**Possible values:**  (ID)"
           }
         ]
       }
     },
     "/Goal/Show": {
       "get": {
         "summary": "Show",
         "tags": [
           "Goals"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "goal": {
                         "id": "41",
                         "name": "Test Goal Action (All Links)",
                         "goal_value": {
                           "type": "Fixed",
                           "value": "0.0000"
                         },
                         "type": "Event Triggered",
                         "event_type": "Link(s) Clicked",
                         "event_link_rule": "All of these link(s) clicked",
                         "links": [
                           "http://yogashop.com/index.php?route=information/contact",
                           "http://yogashop.com/index.php?route=blog/blog"
                         ],
                         "has_action": "Yes",
                         "action": {
                           "id": "69",
                           "name": "Action is deleted!"
                         }
                       }
                     }
                   },
                   "properties": {
                     "goal": {
                       "type": "object",
                       "properties": {
                         "id": {
                           "type": "integer"
                         },
                         "name": {
                           "type": "string"
                         },
                         "goal_value": {
                           "type": "object",
                           "properties": {
                             "type": {
                               "type": "string"
                             },
                             "value": {
                               "type": "string"
                             }
                           }
                         },
                         "type": {
                           "type": "string"
                         },
                         "event_type": {
                           "type": "string"
                         },
                         "event_link_rule": {
                           "type": "string"
                         },
                         "links": {
                           "type": "array",
                           "items": {
                             "type": "string"
                           }
                         },
                         "has_action": {
                           "type": "string"
                         },
                         "action": {
                           "type": "object",
                           "properties": {
                             "id": {
                               "type": "integer"
                             },
                             "name": {
                               "type": "string"
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "goal": {
                         "id": "41",
                         "name": "Test Goal Action (All Links)",
                         "goal_value": {
                           "type": "Fixed",
                           "value": "0.0000"
                         },
                         "type": "Event Triggered",
                         "event_type": "Link(s) Clicked",
                         "event_link_rule": "All of these link(s) clicked",
                         "links": [
                           "http://yogashop.com/index.php?route=information/contact",
                           "http://yogashop.com/index.php?route=blog/blog"
                         ],
                         "has_action": "Yes",
                         "action": {
                           "id": "69",
                           "name": "Action is deleted!"
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-Goal-Show",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/goal/show.json?key={YOUR_API_ID}&id=46\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/GoalWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new GoalWS($user_key);\n$params = array(\n    'id' => '46',\n);\n$results = $app->getGoal( $params );\nprint_r($results);\n ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the goal.<br>**Possible values:**  (ID)",
             "required": true
           }
         ]
       }
     },
     "/Goal/Add": {
       "post": {
         "summary": "Add",
         "operationId": "post-Goal-Add",
         "tags": [
           "Goals"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "domainid",
             "required": true,
             "description": "The Domain id of the goal.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "name",
             "description": "The name of the goal.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "Url"
             },
             "in": "query",
             "required": true,
             "name": "type",
             "description": "The type of the goal.<br>**Possible values:**  url | duration | pages | ppc | event | funnel"
           },
           {
             "schema": {
               "type": "number",
               "default": "Fixed"
             },
             "in": "query",
             "name": "value_type",
             "description": "Goal Value Type.<br>**Possible values:**  fixed | variable"
           },
           {
             "schema": {
               "type": "string",
               "default": "0"
             },
             "in": "query",
             "name": "value",
             "description": "Goal Value if the value type is fixed.<br>**Possible values:**  (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "destination_url",
             "description": "The Destination URL.<br>**Possible values:**   (Link)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_hours",
             "description": "The Duration Number of Hours.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_minutes",
             "description": "The Duration Number of Minutes.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_seconds",
             "description": "The Duration Number of Seconds.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "None"
             },
             "in": "query",
             "name": "pages",
             "description": "The Number of Pages.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "string"
             },
             "in": "query",
             "name": "ppc_networks",
             "description": "The type of Referral Networks.<br>**Possible values:**   google | bing | facebook | twitter | linkedin"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "event_type",
             "description": "The type of Event.<br>**Possible values:**    links | videos | form"
           },
           {
             "schema": {
               "type": "string",
               "default": "any"
             },
             "in": "query",
             "name": "goal_event_filter",
             "description": "Goal will be met if.<br>**Possible values:**   any | all"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "event_links",
             "description": "The Event Links.<br>**Possible values:**   (Link)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "yes"
             },
             "in": "query",
             "name": "event_videos",
             "description": "links of embedded video.<br>**Possible values:**   (Links) <br>**Allow Multiple:**  `yes`"
           },
           {
             "schema": {
               "type": "string",
               "default": "id"
             },
             "in": "query",
             "name": "form_identity_type",
             "description": "Form catch by<br>**Possible values:**  id | name"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "form_identity",
             "description": "The Form identity.<br>**Possible values:**  (Text)"
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/goal/add.json?key={YOUR_API_ID}\n  domainid=1\n  name=goal Name\n  type=url\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/GoalWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new GoalWS($user_key);\n$params = array(\n    'domainid' => '1',\n    'name' => 'goal Name',\n    'type' => 'url',\n);\n$results = $app->addNewGoal( $params );\nprint_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/Goal/Edit": {
       "post": {
         "summary": "Edit",
         "operationId": "post-Goal-Edit",
         "tags": [
           "Goals"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/goal/edit.json?key={YOUR_API_ID}\n   id=1\n   name=goal Name\n   type=url\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/GoalWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new GoalWS($user_key);\n $params = array(\n     'id' => '1',\n     'name' => 'goal Name',\n     'type' => 'url',\n );\n $results = $app->updateGoal( $params );\n print_r($results);\n?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the goal.<br> **Possible values:**  (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "name",
             "description": "The name of the goal.<br> **Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "url"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the goal.<br> **Possible values:**  url | duration | pages | ppc | event | funnel",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "fixed"
             },
             "in": "query",
             "name": "value_type",
             "description": "Goal Value Type.<br> **Possible values:**  fixed | variable"
           },
           {
             "schema": {
               "type": "string",
               "default": "0"
             },
             "in": "query",
             "name": "value",
             "description": "Goal Value if the value type is fixed.<br> **Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "destination_url",
             "description": "The Destination URL.<br> **Possible values:**   (Link)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_hours",
             "description": "The Duration Number of Hours.<br> **Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_minutes",
             "description": "The Duration Number of Minutes.<br> **Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "duration_seconds",
             "description": "The Duration Number of Minutes.<br> **Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "pages",
             "description": "The Number of Pages.<br> **Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "ppc_networks",
             "description": "The type of Referral Networks.<br> **Possible values:**  google | bing | facebook | twitter | linkedin"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "event_type",
             "description": "The type of Event.<br> **Possible values:** links | videos | form"
           },
           {
             "schema": {
               "type": "string",
               "default": "Any"
             },
             "in": "query",
             "name": "goal_event_filter",
             "description": "Goal will be met if.<br> **Possible values:**  any | all | all"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "event_links",
             "description": "The Event Links.<br> **Possible values:**  Link"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "event_videos",
             "description": "links of embedded video.<br> **Allow multiple:**  `yes` <br> **Possible values:** (Links)"
           },
           {
             "schema": {
               "type": "string",
               "default": "id"
             },
             "in": "query",
             "name": "form_identity_type",
             "description": "Form catch by.<br> **Possible values:**  id | name"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "form_identity",
             "description": "The Form identity.<br> **Possible values:** (Text)"
           }
         ]
       }
     },
     "/WebHook/Lists": {
       "get": {
         "summary": "Lists",
         "tags": [
           "Webhooks"
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "x-examples": {
                     "example-1": {
                       "webhooks": {
                         "count": 1,
                         "items": [
                           {
                             "id": "107",
                             "name": "Doctor Request Poll!",
                             "type": "On Page Exit",
                             "domain_id": "1",
                             "url": {
                               "filter": "Matches Exactly",
                               "link": ""
                             },
                             "action_type": "HTML Message",
                             "action_rules": {
                               "execute_for": "All Visitors",
                               "device_filter": "All Devices",
                               "interval": "Repeats",
                               "delay": {
                                 "hours": "0",
                                 "minutes": "0",
                                 "seconds": "0"
                               }
                             },
                             "action_stype": "Popup"
                           },
                           "..."
                         ]
                       }
                     }
                   },
                   "properties": {
                     "webhooks": {
                       "type": "object",
                       "properties": {
                         "count": {
                           "type": "integer"
                         },
                         "items": {
                           "type": "array",
                           "items": {
                             "type": "object",
                             "properties": {
                               "id": {
                                 "type": "integer"
                               },
                               "name": {
                                 "type": "string"
                               },
                               "type": {
                                 "type": "string"
                               },
                               "domain_id": {
                                 "type": "integer"
                               },
                               "url": {
                                 "type": "object",
                                 "properties": {
                                   "filter": {
                                     "type": "string"
                                   },
                                   "link": {
                                     "type": "string"
                                   }
                                 }
                               },
                               "actiontype": {
                                 "type": "string"
                               },
                               "action_rules": {
                                 "type": "object",
                                 "properties": {
                                   "execute_for": {
                                     "type": "string"
                                   },
                                   "device_filter": {
                                     "type": "string"
                                   },
                                   "interval": {
                                     "type": "string"
                                   },
                                   "delay": {
                                     "type": "object",
                                     "properties": {
                                       "hours": {
                                         "type": "integer"
                                       },
                                       "minutes": {
                                         "type": "integer"
                                       },
                                       "seconds": {
                                         "type": "integer"
                                       }
                                     }
                                   }
                                 }
                               }
                             }
                           }
                         },
                         "actions_type": {
                           "type": "string"
                         }
                       }
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "webhooks": {
                         "count": 1,
                         "items": [
                           {
                             "id": "107",
                             "name": "Doctor Request Poll!",
                             "type": "On Page Exit",
                             "domain_id": "1",
                             "url": {
                               "filter": "Matches Exactly",
                               "link": ""
                             },
                             "action_type": "HTML Message",
                             "action_rules": {
                               "execute_for": "All Visitors",
                               "device_filter": "All Devices",
                               "interval": "Repeats",
                               "delay": {
                                 "hours": "0",
                                 "minutes": "0",
                                 "seconds": "0"
                               }
                             },
                             "action_stype": "Popup"
                           },
                           "..."
                         ]
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-WebHook-Lists",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n - - -  \n **Parameters:** `None`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/webhook/lists.json?key={YOUR_API_ID}\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/WebhookWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new WebhookWS($user_key);\n $results = $app->getWebhooks();\n print_r($results);\n?>\n"
           }
         ]
       }
     },
     "x-webhooks": {
       "/Webhook/Show": {
         "get": {
           "summary": "Show",
           "tags": [
             "Webhooks"
           ],
           "responses": {
             "200": {
               "description": "Successful operation",
               "content": {
                 "application/json": {
                   "schema": {
                     "type": "object",
                     "x-examples": {
                       "example-1": {
                         "webhook": {
                           "id": "107",
                           "name": "Poll on who will be elected!",
                           "type": "On Page Exit",
                           "domain_id": "1",
                           "url": {
                             "filter": "Matches Exactly",
                             "link": ""
                           },
                           "action_type": "HTML Message",
                           "action_rules": {
                             "execute_for": "All Visitors",
                             "device_filter": "All Devices",
                             "interval": "Repeats",
                             "delay": {
                               "hours": "0",
                               "minutes": "0",
                               "seconds": "0"
                             }
                           },
                           "action_stype": "Popup"
                         }
                       }
                     },
                     "properties": {
                       "webhook": {
                         "type": "object",
                         "properties": {
                           "id": {
                             "type": "integer"
                           },
                           "name": {
                             "type": "string"
                           },
                           "type": {
                             "type": "string"
                           },
                           "domain_id": {
                             "type": "integer"
                           },
                           "url": {
                             "type": "object",
                             "properties": {
                               "filter": {
                                 "type": "string"
                               },
                               "link": {
                                 "type": "string"
                               }
                             }
                           },
                           "action_type": {
                             "type": "string"
                           },
                           "action_rules": {
                             "type": "object",
                             "properties": {
                               "execute_for": {
                                 "type": "string"
                               },
                               "device_filter": {
                                 "type": "string"
                               },
                               "interval": {
                                 "type": "string"
                               },
                               "delay": {
                                 "type": "object",
                                 "properties": {
                                   "hours": {
                                     "type": "integer"
                                   },
                                   "minutes": {
                                     "type": "integer"
                                   },
                                   "seconds": {
                                     "type": "integer"
                                   }
                                 }
                               }
                             }
                           },
                           "action_stype": {
                             "type": "string"
                           }
                         }
                       }
                     }
                   },
                   "examples": {
                     "example-1": {
                       "value": {
                         "webhook": {
                           "id": "107",
                           "name": "Poll on who will be elected!",
                           "type": "On Page Exit",
                           "domain_id": "1",
                           "url": {
                             "filter": "Matches Exactly",
                             "link": ""
                           },
                           "action_type": "HTML Message",
                           "action_rules": {
                             "execute_for": "All Visitors",
                             "device_filter": "All Devices",
                             "interval": "Repeats",
                             "delay": {
                               "hours": "0",
                               "minutes": "0",
                               "seconds": "0"
                             }
                           },
                           "action_stype": "Popup"
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         },
         "operationId": "get-Webhook-Show",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/webhook/show.json?key={YOUR_API_ID}&id=107\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/WebhookWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new WebhookWS($user_key);\n$params = array(\n    'id' => '107',\n);\n$results = $app->getWebhook( $params );\nprint_r($results);\n ?>\n"
           }
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "id",
             "description": "The ID of the webhook.<br> **Possible values:**  (ID)"
           }
         ]
       }
     },
     "/Goal/Delete": {
       "delete": {
         "summary": "Delete",
         "operationId": "delete-Goal-Delete",
         "tags": [
           "Goals"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the goal to delete.<br>**Possible values:**   (ID)",
             "required": true
           }
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/goal/delete.json?key={YOUR_API_ID}\n  id=1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/GoalWS.php');\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new GoalWS($user_key);\n$params = array(\n    'id' => '1',\n);\n$results = $app->removeGoal( $params );\nprint_r($results);\n ?>\n"
           }
         ]
       }
     },
     "/Webhook/Add": {
       "post": {
         "summary": "Add",
         "operationId": "post-Webhook-Add",
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "tags": [
           "Webhooks"
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/webhook/add.json?key={YOUR_API_ID}\n  id=1\n  name=webhook Name\n  action_type=page_exit\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/WebhookWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new WebhookWS($user_key);\n$params = array(\n    'id' => '1',\n    'name' => 'webhook Name',\n    'action_type' => 'page_exit',\n);\n$results = $app->addNewWebhook( $params );\nprint_r($results);\n ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "name",
             "description": "The name of the webhook.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "page_exit"
             },
             "in": "query",
             "name": "type",
             "description": "The type of the webhook.<br>**Possible values:**  page_exit | page_entry | goal_trigger",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "domainid",
             "description": "The Domain id of the webhook.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_url",
             "description": "Page Url.<br>**Possible values:**   (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "html_msg"
             },
             "in": "query",
             "name": "action_type",
             "description": "The type of the action.<br>**Possible values:**   html_msg | form | poll | redirection | trigger_js"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "redirection_url",
             "description": "Redirection URL.<br>**Possible values:**   (Link)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "list_id",
             "description": "The List ID.<br>**Possible values:**   (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "poll_question",
             "description": "The Polling Question.<br>**Possible values:**   (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "poll_choices",
             "description": "The polling Choices.<br>**Possible values:**   (Text)<br>**Allow multiple:**  `yes`"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "js_code",
             "description": "The Javascript Code.<br>**Possible values:**   (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None",
               "format": "date"
             },
             "in": "query",
             "name": "action_startdate",
             "description": "The Action Trigger Start Date.<br>**Possible values:**  (Date)"
           },
           {
             "schema": {
               "type": "string",
               "format": "date",
               "default": "None"
             },
             "in": "query",
             "name": "action_enddate",
             "description": "The Action Trigger End Date.<br>**Possible values:**  (Date)"
           },
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "action_targetusers",
             "description": "The Target Users.<br>**Possible values:**  all | subscribers | anonymous"
           },
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "action_devicefilter",
             "description": "The Device Filter.<br>**Possible values:**  all | desktop | mobile"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_ppcfilter",
             "description": "The PPC Referral Network Filter.<br>**Possible values:**   google | bing | facebook | twitter | linkedin"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_geofilter",
             "description": "The Geo-Location Filter.<br>**Possible values:**    (Text)<br>**Allow Multiple:**  `yes`"
           },
           {
             "schema": {
               "type": "string",
               "default": "repeat"
             },
             "in": "query",
             "name": "action_frequency",
             "description": "The Action Frequency.<br>**Possible values:**    repeat | one_time"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "delay_hours",
             "description": "The Delay Number of Hours.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "delay_minutes",
             "description": "The Delay Number of Minutes.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "number",
               "default": "0"
             },
             "in": "query",
             "name": "delay_seconds",
             "description": "The Delay Number of Seconds.<br>**Possible values:**   (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "popup"
             },
             "in": "query",
             "name": "action_style",
             "description": "Choose Action Style.<br>**Possible values:**   popup | sticky_bar"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_text",
             "description": "Action Text.<br>**Possible values:**    (Text)"
           }
         ]
       }
     },
     "/Webhook/Edit": {
       "post": {
         "summary": "Edit",
         "operationId": "post-Webhook-Edit",
         "tags": [
           "Webhooks"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/webhook/edit.json?key={YOUR_API_ID}\n   id=1\n   name=webhook Name\n   action_type=page_exit\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\nrequire_once('../PATH/TO/services/WebhookWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}');\t\n$app = new WebhookWS($user_key);\n$params = array(\n    'id' => '1',\n    'name' => 'webhook Name',\n    'action_type' => 'page_exit',\n);\n$results = $app->addNewWebhook( $params );\nprint_r($results);\n ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "name",
             "description": "The name of the webhook.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "page_exit"
             },
             "in": "query",
             "required": true,
             "name": "type",
             "description": "The type of the webhook.<br>**Possible values:**  page_exit | page_entry | goal_trigger"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "id",
             "description": "The ID of the webhook.<br>**Possible values:** (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_url",
             "description": "Page Url.<br>**Possible values:**  (Link)"
           },
           {
             "schema": {
               "type": "string",
               "default": "html_msg"
             },
             "in": "query",
             "name": "action_type",
             "description": "The type of the action.<br>**Possible values:**  html_msg | form | poll | redirection | trigger_js"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "redirection_url",
             "description": "Redirection URL.<br>**Possible values:**  (Link)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "list_id",
             "description": "The List ID.<br>**Possible values:**  (ID)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "poll_question",
             "description": "The Polling Question.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "poll_choices",
             "description": "The polling Choices.<br>**Possible values:**  (Text)<br>**Allow multiple:** `Yes`"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "js_code",
             "description": "The Javascript Code.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_startdate",
             "description": "The Action Trigger Start Date.<br>**Possible values:**  (Date)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_enddate",
             "description": "The Action Trigger End Date.<br>**Possible values:**  (Date)"
           },
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "action_targetusers",
             "description": "The Target Users.<br>**Possible values:**  all | subscribers | anonymous"
           },
           {
             "schema": {
               "type": "string",
               "default": "all"
             },
             "in": "query",
             "name": "action_devicefilter",
             "description": "The Device Filter.<br>**Possible values:**   all | desktop | mobile"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_ppcfilter",
             "description": "The PPC Referral Network Filter.<br>**Possible values:**  google | bing | facebook | twitter | linkedin"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_geofilter",
             "description": "action_geofilter<br>**Possible values:** (Text)<br>**Allow multiple:** `Yes`"
           },
           {
             "schema": {
               "type": "string",
               "default": "repeat"
             },
             "in": "query",
             "name": "action_frequency",
             "description": "The Action Frequency.<br>**Possible values:** repeat | one_time"
           },
           {
             "schema": {
               "type": "string",
               "default": "Number"
             },
             "in": "query",
             "name": "delay_hours",
             "description": "The Delay Number of Hours.<br>**Possible values:** (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "Number"
             },
             "in": "query",
             "name": "delay_minutes",
             "description": "The Delay Number of Minutes.<br>**Possible values:** (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "Number"
             },
             "in": "query",
             "name": "delay_seconds",
             "description": "The Delay Number of Seconds.<br>**Possible values:** (Number)"
           },
           {
             "schema": {
               "type": "string",
               "default": "popup"
             },
             "in": "query",
             "name": "action_style",
             "description": "Choose Action Style<br>**Possible values:**  popup | sticky_bar"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "action_text",
             "description": "Action Text.<br>**Possible values:**  (Text)"
           }
         ]
       }
     },
     "/Webhook/Delete": {
       "delete": {
         "summary": "Delete",
         "operationId": "delete-Webhook-Delete",
         "tags": [
           "Webhooks"
         ],
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/webhook/delete.json?key={YOUR_API_ID}\n   id=1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/WebhookWS.php');\t\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new WebhookWS($user_key);\n $params = array(\n     'id' => '1',\n );\n $results = $app->removeWebhook( $params );\n print_r($results);\n ?>\n"
           }
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "required": true,
             "name": "id",
             "description": "The ID of the webhook to delete.<br>**Possible values:**  (ID) "
           }
         ]
       }
     },
     "/Register/CreateAccount": {
       "post": {
         "summary": "Create Account",
         "operationId": "post-Register-CreateAccount",
         "tags": [
           "Register"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "POST https://api.vbout.com/1/register/createaccount.json?key={YOUR_API_ID}\n   contact_name=VBOUT TEST\n   business_name=VBOUT TEST\n   business_email=info@vobut.com\n   business_phone=123456789\n   business_vbout_name=VBOUT TEST\n   business_password=xxxxxxxxxxx\n   business_vat_number=123\n   timezone=America/Los_Angeles\n   plan_id=10\n   commission_structure=1\n   disable_billing_access=0\n   disable_settings_access=1\n   pay_on_signup=1\n"
           },
           {
             "lang": "PHP",
             "source": "<?php\n require_once('../PATH/TO/services/RegisterWS.php');\n $user_key = array('api_key' => '{YOUR_API_KEY}');\t\n $app = new RegisterWS($user_key);\n $params = array(\n     'contact_name' => 'VBOUT TEST',\n     'business_name' => 'VBOUT TEST',\n     'business_email' => 'info@vobut.com',\n     'business_phone' => '123456789',\n     'business_vbout_name' => 'VBOUT TEST',\n     'business_password' => 'xxxxxxxxxxx',\n     'business_vat_number' => '123',\n     'timezone' => 'America/Los_Angeles',\n     'plan_id' => '10',\n     'commission_structure' => '1',\n     'disable_billing_access' => '0',\n     'disable_settings_access' => '1',\n     'pay_on_signup' => '1',\n );\n $results = $app->createAccount( $params );\n print_r($results);\n ?>\n"
           }
         ],
         "parameters": [
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "contact_name",
             "description": "The contact name.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_name",
             "description": "The business name.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_email",
             "description": "The business email.<br>**Possible values:**  (Email)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_phone",
             "description": "The business phone.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_vbout_name",
             "description": "The business VBOUT name.<br>**Possible values:**  (Text)",
             "required": true
           },
           {
             "schema": {
               "type": "number",
               "default": "None"
             },
             "in": "query",
             "name": "plan_id",
             "description": "The custom plan id.<br>**Possible values:**  (Number)",
             "required": true
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_password",
             "description": "The business password.<br>**Possible values:**   (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "None"
             },
             "in": "query",
             "name": "business_vat_number",
             "description": "The business VAT number.<br>**Possible values:**  (Text)"
           },
           {
             "schema": {
               "type": "string",
               "default": "America/New_York"
             },
             "in": "query",
             "name": "timezone",
             "description": "The business timezone.<br>**Possible values:**  https://www.php.net/manual/en/timezones.php"
           },
           {
             "schema": {
               "type": "integer",
               "default": "1"
             },
             "in": "query",
             "name": "commission_structure",
             "description": "The commission structure.<br>**Possible values:**    (1: Discount to paid amount) | (2: Normal commission payout)"
           },
           {
             "schema": {
               "type": "integer",
               "default": "0"
             },
             "in": "query",
             "name": "disable_billing_access",
             "description": "Disable Billing Access.<br>**Possible values:**  0 | 1"
           },
           {
             "schema": {
               "type": "integer",
               "default": "0"
             },
             "in": "query",
             "name": "disable_settings_access",
             "description": "Disable Settings Access.<br>**Possible values:**  0 | 1"
           },
           {
             "schema": {
               "type": "integer",
               "default": "0"
             },
             "in": "query",
             "name": "pay_on_signup",
             "description": "Pay using agency saved card on success signup, and save the card to the newly created account.<br>**Possible values:**  0 | 1"
           }
         ]
       }
     },
     "/GetSubAccountAutoLogin": {
       "post": {
         "summary": "Subscriber Account Auto Login",
         "operationId": "post-GetSubAccountAutoLogin",
         "tags": [
           "Account"
         ],
         "description": "**Authentication:** `Required`    \n  - - -  \n  \n**Response Formats:** `XML | JSON`  \n- - -  \n**Note:** `It should work with with Agencies only.`",
         "x-codeSamples": [
           {
             "lang": "cURL",
             "source": "GET https://api.vbout.com/1/account/getsubaccountautologin.json?key={YOUR_API_ID}&id=3\n"
           }
         ],
         "responses": {
           "200": {
             "description": "Successful operation",
             "content": {
               "application/json": {
                 "schema": {
                   "type": "object",
                   "properties": {
                     "id": {
                       "type": "integer"
                     },
                     "name": {
                       "type": "string"
                     },
                     "email": {
                       "type": "string"
                     },
                     "login-url": {
                       "type": "string"
                     }
                   },
                   "x-examples": {
                     "example-1": {
                       "id": 123,
                       "name": "Sub Account 1",
                       "email": "test01@example.com",
                       "login-url": "https://xxxxx"
                     }
                   }
                 },
                 "examples": {
                   "example-1": {
                     "value": {
                       "id": 123,
                       "name": "Sub Account 1",
                       "email": "test01@example.com",
                       "login-url": "https://xxxxx"
                     }
                   }
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "schema": {
               "type": "integer",
               "default": "None"
             },
             "in": "query",
             "name": "id",
             "description": "The ID of the sub-account.<br>**Possible values:**   (ID)",
             "required": true
           },
           {
             "schema": {
               "type": "integer",
               "default": 3600
             },
             "in": "query",
             "name": "expire",
             "description": "the number of seconds that the returned auto-login url will remain valid before it expire (MAX 3600 Seconds).<br>**Possible values:**   1800"
           }
         ]
       }
     }
   },
   "components": {
     "schemas": {
       "User": {
         "title": "User",
         "type": "object",
         "description": "",
         "examples": [
           {
             "id": 142,
             "firstName": "Alice",
             "lastName": "Smith",
             "email": "alice.smith@gmail.com",
             "dateOfBirth": "1997-10-31",
             "emailVerified": true,
             "signUpDate": "2019-08-24"
           }
         ],
         "properties": {
           "id": {
             "type": "integer",
             "description": "Unique identifier for the given user."
           },
           "firstName": {
             "type": "string"
           },
           "lastName": {
             "type": "string"
           },
           "email": {
             "type": "string",
             "format": "email"
           },
           "dateOfBirth": {
             "type": "string",
             "format": "date",
             "example": "1997-10-31"
           },
           "emailVerified": {
             "type": "boolean",
             "description": "Set to true if the user's email has been verified."
           },
           "createDate": {
             "type": "string",
             "format": "date",
             "description": "The date that the user was created."
           }
         },
         "required": [
           "id",
           "firstName",
           "lastName",
           "email",
           "emailVerified"
         ]
       }
     },
     "requestBodies": {}
   },
   "x-logo": {
     "url": "https://i.im.ge/2022/09/15/1lJujf.vbout-logo.png",
     "backgroundColor": "#FFFFFF",
     "altText": "Vbout logo"
   },
   "x-webhooks": {
     "$ref": "openapi.yaml#/paths/~1Webhook/Delete"
   }
 }
