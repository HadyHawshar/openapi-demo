openapi: 3.0.3

#introduction...
info:
  version: "1.0"
  title: "Vbout API"
  description: |-
    # Introduction
    Vbout API provides programmatic access to read and write Vbout data. You can use it to synch user information between your own database and Vbout's marketing automation, get prospects information and more. The responses are available in JSON/XML.
    # Authentication
    Vbout offers authentication through:
      - API Key
      - An Application Key is generated from your Account Settings and activated through Vbout Connect. This key gives limited access to your account and can be deleted whenever you want to prevent access.
  x-logo:
    url: "https://i.im.ge/2022/09/15/1lJujf.vbout-logo.png"
    backgroundColor: "#FFFFFF"
    altText: "Vbout logo"

externalDocs:
  description: "Quickstart with Vbout API in PHP."
  url: https://developers.vbout.com/quickstart

servers:
- url: https://api.vbout.com/1
  description: Resource URL
  
#waiting until we finish all collections
# Collection grouping
#x-tagGroups:
  #- name: Application services
   # tags:
     # - Application
     


paths:
#Application
  "/App/Me":
    get:
      tags: ["Application"]
      summary: Application summary
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/app"
      description: 
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"                    

#including request responses samples
      x-codeSamples:
        - lang: 'CURL'
          source: |
            GET https://api.vbout.com/1/app/me.json?key={YOUR_API_ID}
        - lang: PHP
          source: |
            <?php
              require_once('../PATH/TO/services/ApplicationWS.php');
              $user_key = array('api_key' => '{YOUR_API_KEY}');
              $app = new ApplicationWS($user_key);
              $results = $app->getBusinessInfo();
              print_r($results);
            ?>

# Social Media endpoints
  #channels
  "/SocialMedia/Channels":
    get:
      tags: ["Social Media"]
      summary: Channels Summary
      responses:
         "200":
           description: successful operation
           content:
            application/json:
             schema:
              $ref: "#/components/schemas/social-channels"
      description:
       "**Parameters**: `None`\n\n 
       **Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"
     #sample requests-channels
      x-codeSamples:
        - lang: 'CURL'
          source: |
            GET https://api.vbout.com/1/socialmedia/channels.json?key={YOUR_API_ID}
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/SocialMediaWS.php');
             $user_key = array('api_key' => '{YOUR_API_KEY}');
             $app = new SocialMediaWS($user_key);
             $results = $app->getChannels();
             print_r($results);
             ?>            
  #calendar
  "/SocialMedia/Calendar":
    get:
      tags: ["Social Media"]
      summary: Calendar Summary
      responses:
         "200":
           description: successful operation
           content:
            application/json:
             schema:
              $ref: "#/components/schemas/social-calendar"
      description:
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"
      parameters:
        - name: Channels
          in: query
          description:
            "The channels from where the posts are gathered.\n\n
            **Possible Values:** all | facebook | twitter | linkedin"    
          required: false
          schema:
            type: String
            default: all
        - name: From
          in: query
          description:
             "The from date which the reviews are returned. The filter must be `date` for this parameter to work.\n\n
             **Possible Values:** (Date)"
          required: true
          schema:
            pattern: ⠀ m/d/Y | Y-m-d
            type: date
            default: None

        - name: To
          in: query
          description:
             "The to date which the reviews are returned. The filter must be `date` for this parameter to work.\n\n
             **Possible Values:** (Date)"
          required: true
          schema:
            pattern: ⠀ m/d/Y | Y-m-d
            type: date
            default: None    
        - name: IncludPposted
          in: query
          description:
             "Include already scheduled posts inside the results.\n\n
             **Possible Values:** `true | false`"
          schema:
            type: boolean
            default: false
        - name: Limit
          in: query
          description:
             "Set your record limit number per page.\n\n
             **Possible Values:** `Number`"
          schema:
            type: integer
            default: 10
        - name: Page
          in: query
          description:
             "Set which page you wanna get.\n\n
             **Possible Values:** `Number`"
          schema:
            type: integer
            default: 1 
        - name: Sort
          in: query
          description:
             "Record Sorting.\n\n
             **Possible Values:** `asc | desc`"
          schema:
            type: String
            default: asc       
     #sample requests-calendar
      x-codeSamples:
        - lang: 'CURL'
          source: |
           POST https://api.vbout.com/1/socialmedia/calendar.json?key={YOUR_API_ID}
           channels=all
           includeposted=true
        - lang: PHP
          source: |
            <?php
            require_once('../PATH/TO/services/SocialMediaWS.php');
            $user_key = array('api_key' => '{YOUR_API_KEY}');
            $app = new SocialMediaWS($user_key);
            $params = array(
                'channels' => 'all',
                'includeposted' => 'true',
            );
            $results = $app->getCalendar( $params );
            print_r($results);
             ?> 
        # End calendar

#social-stats
  "/SocialMedia/Stats":
    get:
      description:
         "**Authentication**: `Required`
         \n\n**Format** : `XML | JSON`"
      tags: ["Social Media"]
      summary: Stats Summary
      responses:
         "200":
           description: successful operation
           content:
            application/json:
             schema:
              $ref: "#/components/schemas/social-stats"
         "400":
            description: "Stats not found"    
      parameters:
        - name: channels
          in: query
          description:
           "The channels where the posts are gathered from.\n\n
           **Possible Values:** all | facebook | twitter | linkedin | pinterest"    
          schema:
            type: String
            default: all
        - name: sort
          in: query
          description:
             "Record Sorting.\n\n**Possible Values:** asc | desc"
          schema:
            type: String
            default: asc 
      #sample requests-getpost
      x-codeSamples:
        - lang: 'CURL'
          source: |
           GET https://api.vbout.com/1/socialmedia/stats.json?key={YOUR_API_ID}&channels=facebook
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/SocialMediaWS.php');
             $user_key = array('api_key' => '{YOUR_API_KEY}');
             $app = new SocialMediaWS($user_key);
             $params = array(
                 'channels' => 'facebook',
             );
             $results = $app->getStats( $params );
             print_r($results);
             ?>         

   #getpost
  "/SocialMedia/GetPost":
    get:
      tags: ["Social Media"]
      summary: Get Post Summary
      responses:
         "200":
           description: successful operation
           content:
            application/json:
              schema:
                $ref: "#/components/schemas/getpost"  
      description: 
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"           
      parameters:
        - name: ID
          in: query
          description:
           "The ID of the post.\n\n
           **Possible Values:** (ID)"    
          required: true
          schema:
            type: integer
            default: None
        - name: Channel
          in: query
          description:
             "The channel where the post is created.\n\n**Possible Values:** facebook | twitter | linkedin"
          required: true
          schema:
            type: String
            default: None

      #sample requests-getpost
      x-codeSamples:
        - lang: 'CURL'
          source: |
            GET https://api.vbout.com/1/socialmedia/getpost.json?key={YOUR_API_ID}&id=682&channel=facebook
        - lang: PHP
          source: |
            <?php
               require_once('../PATH/TO/services/SocialMediaWS.php');
               $user_key = array('api_key' => '{YOUR_API_KEY}');
               $app = new SocialMediaWS($user_key);
               $params = array(
               'id' => '682',
               'channel' => 'facebook',
            );
              $results = $app->getMyPost( $params );
              print_r($results);
              ?>
    #addpost
  "/SocialMedia/AddPost":
    post:
      tags: ["Social Media"]
      summary: Add Post Summary
      responses:
         "200":
           description: successful operation
        #   content:
        #    application/json:
        #     schema:
        #       $ref: "#/components/schemas/getpost"  
      description: 
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"
      parameters:
        - name: message
          in: query
          description: 
            "The post message to be scheduled/sent.\n\n**Possible values:**(text)"
          required: true
          schema:
            type: String
            default: None
        - name: Channel
          in: query
          description:
             "The channels which the post will be sent to.\n\n**Possible Values:** facebook | twitter | linkedin | pinterest | instagram"
          required: true
          schema:
            type: String
            default: None
        - name: Channelid
          in: query
          description:
             "The channels which the post will be sent to\n\n**Possible Values:** 1 | 2 | 3 | 4"
          required: true
          schema:
            type: integer
            default: None 
        - name: photo
          in: query
          description:
             "The photo which will be attached to the post.\n\n**Possible Values:** (Link) or (Uploaded Image)"
          schema:
            type: String     
            default: None     
        - name: isscheduled
          in: query
          description:
             "This flag will make the post to be scheduled for future.\n\n**Possible Values:** `true | false`"
          schema:
            type: boolean     
            default: false       
        - name: scheduleddate
          in: query
          description:
             "Date of the post to be scheduled.\n\n**Format Accepted:**(Date)"
          schema:
            type: date    
            pattern: ⠀⠀Format:⠀'/m/d/Y | Y-m-d'     
            default: None    
        - name: scheduledhours
          in: query
          description:
             "Time of the post to be scheduled.\n\n**Format Accepted:**(Time)"
          schema:
            type: time    
            pattern: ⠀⠀Format:⠀"HH:MM"     
            default: None         
        - name: scheduledampm
          in: query
          description:
             "AMPM of the post to be scheduled.\n\n**Possible values:**/AM | PM | am | pm"
          schema:
            type: String         
            default: None           
        - name: trackableLinks
          in: query
          description:
             "Convert all links inside message to short urls.\n\n**Possible values:**`true | false`"
          schema:
            type: boolean         
            default: false      
       
      #sample requests-addpost
      x-codeSamples:
        - lang: 'CURL'
          source: |
           POST https://api.vbout.com/1/socialmedia/addpost.json?key={YOUR_API_ID}
           message=Hello World
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/SocialMediaWS.php');
             $user_key = array('api_key' => '{YOUR_API_KEY}');
             $app = new SocialMediaWS($user_key);
             $params = array(
                 'message' => 'Hello World',
             );
             $results = $app->AddNewpost( $params );
             print_r($results);
             ?>          
      #security:
        #- api_key: []

    #editpost
  "/SocialMedia/EditPost":
    post:
      tags: ["Social Media"]
      summary: Edit Post Summary
      responses:
         "200":
           description: successful operation
        #   content:
        #    application/json:
        #     schema:
        #       $ref: "#/components/schemas/getpost"  
      description: 
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`" 
      parameters:
        - name: id
          in: query
          description:
            "ID of the post message to be edited/sent.\n\n**Possible Values:** (ID)"
          required: true
          schema:
            type: integer
            default: None 
        - name: channel
          in: query
          description: 
           "The channel where the post was scheduled/sent.\n\n**Possible Values:**  facebook | twitter | linkedin | pinterest | instagram"
          required: true
          schema:
            type: String
            default: None 
        - name: message
          in: query
          description: 
            "The post message to be scheduled/sent.\n\n**Possible Values:** (Text)"
          schema:
            type: String
            default: None
        - name: scheduleddatetime
          in: query
          description: 
            "Date/Time of the post to be scheduled.\n\n**Possible Values:**  (Datetime)"
          schema:
            type: datetime
            pattern: ⠀⠀Format:⠀"ISO-8601 (Y-m-d H:i:s)"
            default: None 
      #sample requests-addpost
      x-codeSamples:
        - lang: 'CURL'
          source: |
            POST https://api.vbout.com/1/socialmedia/editpost.json?key={YOUR_API_ID}
            id=1
            channel=facebook
            message=Hello World!
            scheduleddatetime=2020-10-20 15:30:00
      #  - lang: PHP
      #    source: |
      #      <?php
      #       require_once('../PATH/TO/services/SocialMediaWS.php');
  #Deletepost
  "/SocialMedia/DeletePost":
    delete:
      tags: ["Social Media"]
      summary: Delete Post Summary
      responses:
        "200":
           description: Deleted successfully
        "404":
            description: Post not found
        #   content:
        #    application/json:
        #     schema:
        #       $ref: "#/components/schemas/getpost"
      description: 
       "**Authentication**: `Required`
       \n\n**Format** : `XML | JSON`"
      parameters:
        - name: id
          in: query
          description:
            "ID of the post message to be deleted.\n\n**Possible Values:** (ID)"
          required: true
          schema:
            type: integer
            default: None  
        - name: channel
          in: query
          description: 
            "The channels which the post will be sent to.\n\n**Possible Values:**  facebook | twitter | linkedin"
          schema:
            type: String
            default: None
      #sample requests-addpost
      x-codeSamples:
        - lang: 'CURL'
          source: |
           POST https://api.vbout.com/1/socialmedia/deletepost.json?key={YOUR_API_ID}
           id=1
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/SocialMediaWS.php');	
             $user_key = array('api_key' => '{YOUR_API_KEY}');	
             $app = new SocialMediaWS($user_key);
             $id = '1';
             $results = $app->removePost($id);
             print_r($results);
            ?>                                                  

components:
  schemas:
#Application-get /app/me'
    app:
      type: object
      properties:
        business:
          type: object
          properties:
            businessname:
              description: Business name
              type: String
              example: "Loft Hotels"
            contactname:
              description: Contact name
              type: String 
              example: "Paul Downy"
            phoneNumber:
              description: Contact phone number
              type: String
              example: "212-400-7133"
            vboutName:
              description: Contact's vbout name
              type: String
              example: "Loft-corporate"
            package:
              description: Package name
              type: String 
              example: "Franchise"      
# Social media /Getpost
    getpost:
      type: object
      properties:
        item:
          type: object
          properties:
            id:
             description: post id
             type: integer
             example: "682"
            title:
             description: post title
             type: string
             example: "OSV Treats & Chews provides a big nutritional boost of phytonutrients & antioxidants from fruits & vegetables; tomatoes, spinach & carrots! http://www.clearconsciencepet.com/osv-meaty-treats/"
        datetime:
          description: User first name
          type: string
          example: "05/16/2013 10:34 AM"
        Item:
          type: object
          properties:
            uid:
              description: user's platform ID
              type: integer
              example:  "0"
        type:
             description: Platform name
             type: string
             example:  "facebook"
        image:
             description: Image of the post
             type: string
             example:  ""
        profile:
             description: profile number
             type: integer
             example: "166346373390497"
    
  #securitySchemes:
    #api_key:
      #description: >
       # For this sample, you can use the api key `YOUR_API_ID` to test the
       # API.
      #type: apiKey
      #name: api_key 


    # Social media /social-channels
    social-channels:
      type: object
      properties:
        channels:
          type: object
          properties:
            facebook:
             type: object
             properties:
               count:
                 description: count
                 type: integer
                 example: "1"
               pages:
                 type: array
                 items:
                   - type: object
                     properties:
                       id:
                         type: integer
                         example: "510584708978405"
                       name:
                         type: string
                         example: "Spotless TV" 
            twitter:
             type: object
             properties:
               count:
                 description: count
                 type: integer
                 example: "1"
               profiles:
                 type: array
                 items:
                   - type: object
                     properties:
                       id:
                         type: integer
                         example: "333248756"
                       screenname:
                         type: string
                         example: "imadrajab"
                       fullname:
                         type: string
                         example: "Imad Rajab"
            linkedin:
             type: object
             properties:
               count:
                 description: count
                 type: integer
                 example: "0"
               profiles:
                 type: array
                 items:
                   type: object
#social-stats
    social-stats:
       properties:
        stats:        
         type: object
         example:  { 
                   	"items": [    #removed stats:{ } in example inorder to succeed with no problems...
                   	  {
                   		"id": "2236",
                   		"shortenurl": "A4",
                   		"realurl": "http://munchies.com/index.php?route=information/contact&__vbtrk=NjkzNDowOnNvY2lhbG1lZGlhOmZhY2Vib29r&__vbtrk=MjgzNTowOnNvY2lhbG1lZGlhOnR3aXR0ZXI=",
                   		"message": "http://vbout.com/goto/A4 click here",
                   		"date": "1402401420",
                   		"tracks": 9,
                   		"clicks": {
                   		  "facebook": "9"
                   		}
                   	  },
                   	  {
                   		"id": "2436",
                   		"shortenurl": "Di",
                   		"realurl": "http://www.munchie.com/?__vbtrk=NzkxNjowOnNvY2lhbG1lZGlhOmZhY2Vib29r",
                   		"message": "Test leadscoring  https://www.vbout.com/goto/Di",
                   		"date": "1408031400",
                   		"tracks": 8,
                   		"clicks": {
                   		  "facebook": "8"
                   		}
                   	  },
                   	  ...
                   	]
                     }
                   
          
  



 # Social media /calendar
    social-calendar:
      type: object
      properties:
        calendar:
          type: object
          properties:
            count:
             description: count
             type: integer
             example: "168"
            items:
             type: object
             properties:
              "2013-08-15":
                type: object
                properties:
                 "1":
                   type: object
                   properties:
                    id:
                     type: integer
                     description: id
                     example: "2347"
                    message:
                      type: String
                      description: Message
                      example: "http://vbout.com/goto/b0 welcome my man ... how are you [delete url] http://vbout.com/goto/b2" 
                    photo:
                      type: object
                      description: photo
                      properties: 
                       thumb: 
                        description: thumbnail
                        example: "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg"
                       original: 
                        description: original
                        example: "http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg"  
                    channel: 
                     type: object
                     properties:
                      network: 
                       type: String
                       description: Network
                       example: "facebook"
                      type: 
                       type: String
                       description: Type
                       example: "page"
                      id: 
                       type: String
                       description: id
                       example: "510584708978405"
                      name: 
                       type: String
                       description: network
                       example: "Spotless TV"   
                      date: 
                       type: date
                       description: network
                       example: "08/15/2013 14:52 PM"   
              "2013-08-16":
                type: object
                properties:
                 "2":
                   type: object
                   properties:
                    id:
                     type: integer
                     description: id
                     example: "2366"
                    message:
                      type: String
                      description: Message
                      example: "test facebook headers"
                    channel:
                     type: object
                     properties:
                      network: 
                       type: String
                       description: Network
                       example: "facebook"
                      type: 
                       type: String
                       description: Type
                       example: "page"
                      id: 
                       type: String
                       description: id
                       example: "510584708978405"
                      name: 
                       type: String
                       description: network
                       example: "Spotless TV"   
                      date: 
                       type: date
                       description: network
                       example: "08/16/2013 13:39 PM"
                 "3":
                    type: object
                    properties:
                     id:
                      type: integer
                      description: id
                      example: "2367"
                     message:
                      type: String
                      description: Message
                      example: "test facebook post with url  http://vbout.com/goto/bz" 
                     photo:
                      type: object
                      description: photo
                      properties: 
                       thumb: 
                         description: thumbnail
                         example: "https://www.facebook.com/images/fb_icon_325x325.png"
                       original: 
                         description: original
                         example: "https://www.facebook.com/images/fb_icon_325x325.png" 
                     channel: 
                       type: object
                       properties:
                        network: 
                         type: String
                         description: Network
                         example: "Facebook"
                        type: 
                          type: String
                          description: Type
                          example: "Page"
                        id: 
                          type: String
                          description: id
                          example: "510584708978405"
                        name: 
                          type: String
                          description: network
                          example: "Spotless TV"   
                        date: 
                          type: date
                          description: network
                          example: "08/16/2013 13:40 PM"    
                 "4":
                   type: object
                   properties:
                    id:
                     type: integer
                     description: id
                     example: "2368"
                    message:
                      type: String
                      description: Message
                      example: "test all socials spiders  http://vbout.com/goto/bA"
                    photo:
                      type: object
                      description: photo
                      properties: 
                       thumb: 
                         description: thumbnail
                         example: "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png"
                       original: 
                         description: original
                         example: "http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png"
                       channel: 
                         type: object
                         properties:
                          network: 
                           type: String
                           description: Network
                           example: "Facebook"
                          type: 
                           type: String
                           description: Type
                           example: "Page"
                          id: 
                           type: String
                           description: id
                           example: "510584708978405"
                          name: 
                           type: String
                           description: network
                           example: "Spotless TV"   
                          date: 
                           type: date
                           description: network
                           example: "08/16/2013 13:49 PM"    