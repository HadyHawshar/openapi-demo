openapi: 3.1.0
info:
  title: Vbout
  version: '1.0'
  description: |-
    # Introduction
    Vbout API provides programmatic access to read and write Vbout data. You can use it to synch user information between your 
    own database and Vbout's marketing automation, get prospects information and more. The responses are available in JSON/XML.
    # Authentication
    Vbout offers authentication through:
    - API Key
    - An Application Key is generated from your Account Settings and activated through Vbout Connect. This key gives limited 
    access to your account and can be deleted whenever you want to prevent access.
  x-logo:
   url: 'https://i.im.ge/2022/09/15/1lJujf.vbout-logo.png'
   backgroundColor: '#FFFFFF'
   altText: Vbout logo 
servers:
  - url: 'https://api.vbout.com/1'
    description: Resource URL
paths:
  /App/Me:
    get:
      summary: Application summary
      tags:
        - Application
      operationId: get-App-Me
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      parameters: []
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  BusinessName:
                    type: string
                  contactName:
                    type: string
                  phoneNumber:
                    type: string
                  vboutName:
                    type: string
                  package:
                    type: string
              examples:
                Example Response:
                  value:
                    business:
                      businessname: Loft Hotels
                      contactname: Paul Downy
                      phoneNumber: 212-400-7133
                      vboutName: Loft-corporate
                      package: Franchise
            application/xml:
              schema:
                type: object
                properties: {}
              examples:
                Example:
                  value: No sample.
        '403':
          description: Forbidden
        '404':
          description: Not Found
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              XML:
                value: No sample.
      x-codeSamples:
        - lang: cURL
          source: 'POST https://api.vbout.com/1/socialmedia/addpost.json?key={YOUR_API_ID} message=Hello World'
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/ApplicationWS.php');
             $user_key = array('api_key' => '{YOUR_API_KEY}');
             $app = new ApplicationWS($user_key);
             $results = $app->getBusinessInfo();
             print_r($results);
             ?>
    parameters: []
  /SocialMedia/Channels:
    get:
      summary: Get Channels Summary
      tags:
        - Social Media
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: object
                    properties:
                      Facebook:
                        type: object
                        properties:
                          count:
                            type: integer
                          pages:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                      Twitter:
                        type: object
                        properties:
                          count:
                            type: integer
                          profiles:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                screenname:
                                  type: string
                                fullname:
                                  type: string
                      Linkedin:
                        type: object
                        properties:
                          count:
                            type: integer
                          profiles:
                            type: array
                            items:
                              type: object
                              properties: {}
                x-examples:
                  example-1:
                    channels:
                      Facebook:
                        count: 1
                        pages:
                          - id: '510584708978405'
                            name: Spotless TV
                      Twitter:
                        count: 1
                        profiles:
                          - id: '333248756'
                            screenname: imadrajab
                            fullname: Imad Rajab
                      Linkedin:
                        count: 0
                        profiles: []
              examples:
                example-1:
                  value:
                    channels:
                      Facebook:
                        count: 1
                        pages:
                          - id: '510584708978405'
                            name: Spotless TV
                      Twitter:
                        count: 1
                        profiles:
                          - id: '333248756'
                            screenname: imadrajab
                            fullname: Imad Rajab
                      Linkedin:
                        count: 0
                        profiles: []
      operationId: get-SocialMedia-Channels
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`  
          
        **Parameters:** `none` 
      x-codeSamples:
        - lang: cURL
          source: 'GET https://api.vbout.com/1/socialmedia/channels.json?key={YOUR_API_ID}'
        - lang: PHP
          source: |
            <?php
            require_once('../PATH/TO/services/SocialMediaWS.php');
            $user_key = array('api_key' => '{YOUR_API_KEY}');
            $app = new SocialMediaWS($user_key);
            $results = $app->getChannels();
            print_r($results);
            ?>
  /SocialMedia/Calendar:
    get:
      summary: Get Calendar Summary
      tags:
        - Social Media
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendar:
                    type: object
                    properties:
                      count:
                        type: integer
                  items:
                    type: object
                    properties:
                      '2013-08-15':
                        type: object
                        properties:
                          '1':
                            type: object
                            properties:
                              id:
                                type: integer
                              message:
                                type: string
                              photo:
                                type: object
                                properties:
                                  thumb:
                                    type: string
                                  original:
                                    type: string
                                  channel:
                                    type: object
                                    properties:
                                      network:
                                        type: string
                                      type:
                                        type: string
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      date:
                                        type: string
                          '2013-08-16':
                            type: object
                            properties:
                              '2':
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  message:
                                    type: string
                                  channel:
                                    type: string
                              '3':
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  message:
                                    type: string
                                  photo:
                                    type: string
                                  channel:
                                    type: object
                                    properties:
                                      network:
                                        type: string
                                      type:
                                        type: string
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      date:
                                        type: string
                              '4':
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  message:
                                    type: string
                                  photo:
                                    type: string
                                  channel:
                                    type: object
                                    properties:
                                      network:
                                        type: string
                                      type:
                                        type: string
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      date:
                                        type: string
              examples:
                example-1:
                  value:
                    calendar:
                      count: 168
                      items:
                        '2013-08-15':
                          '1':
                            id: '2347'
                            message: 'http://vbout.com/goto/b0 welcome my man ... how are you [delete url] http://vbout.com/goto/b2'
                            photo:
                              thumb: 'http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg'
                              original: 'http://www.kickstarter.com/images/compass/site/facebook_thumb.jpg'
                            channel:
                              network: Facebook
                              type: Page
                              id: '510584708978405'
                              name: Spotless TV
                              date: '08/15/2013 14:52 PM'
                          ...: null
                        '2013-08-16':
                          '2':
                            id: '2366'
                            message: test facebook headers
                            channel:
                              network: Facebook
                              type: Page
                              id: '510584708978405'
                              name: Spotless TV
                              date: '08/16/2013 13:39 PM'
                          '3':
                            id: '2367'
                            message: 'test facebook post with url  http://vbout.com/goto/bz'
                            photo:
                              thumb: 'https://www.facebook.com/images/fb_icon_325x325.png'
                              original: 'https://www.facebook.com/images/fb_icon_325x325.png'
                            channel:
                              network: Facebook
                              type: Page
                              id: '510584708978405'
                              name: Spotless TV
                              date: '08/16/2013 13:40 PM'
                          '4':
                            id: '2368'
                            message: 'test all socials spiders  http://vbout.com/goto/bA'
                            photo:
                              thumb: 'http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png'
                              original: 'http://www.domaintools.com/images/logos/dt-logo-gear-50x50.png'
                            channel:
                              network: Facebook
                              type: Page
                              id: '510584708978405'
                              name: Spotless TV
                              date: '08/16/2013 13:49 PM'
                          ...: null
      operationId: get-SocialMedia-Calendar
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      parameters:
        - schema:
            type: string
            default: all
          in: query
          name: channels
          description: 'The channels from where the posts are gathered.<br>**Possible Values:**  all | facebook | twitter | linkedin'
        - schema:
            type: string
            format: date
            default: none
            pattern: m/d/Y | Y-m-d
          in: query
          name: from
          required: true
          description: 'The from date which the reviews are returned. The filter must be ''date'' for this parameter to work.<br>**Possible Values:** (Date) '
        - schema:
            type: string
            format: date
            default: none
            pattern: m/d/Y | Y-m-d
          in: query
          name: to
          required: true
          description: 'The to date which the reviews are returned. The filter must be ''date'' for this parameter to work.<br>**Possible Values:** (Date) '
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: includeposted
          description: 'Include already scheduled posts inside the results.<br>**Possible Values:** true | false'
        - schema:
            type: number
            default: 10
          in: query
          name: limit
          description: 'Set your record limit number per page.<br>**Possible Values:**(Number)'
        - schema:
            type: number
            default: 1
          in: query
          name: page
          description: 'Set which page you wanna get.<br>**Possible Values:**(Number)'
        - schema:
            type: string
            default: asc
          in: query
          name: sort
          description: 'Record Sorting.<br>**Possible Values:**  asc | desc'
      x-codeSamples:
        - lang: cURL
          source: |
            POST https://api.vbout.com/1/socialmedia/calendar.json?key={YOUR_API_ID}
               channels=all
               includeposted=true
        - lang: PHP
          source: |
            <?php
            require_once('../PATH/TO/services/SocialMediaWS.php');
            $user_key = array('api_key' => '{YOUR_API_KEY}');
            $app = new SocialMediaWS($user_key);
            $params = array(
                'channels' => 'all',
                'includeposted' => 'true',
            );
            $results = $app->getCalendar( $params );
            print_r($results);
            ?>
  /SocialMedia/Stats:
    get:
      summary: Get Stats Summary
      tags:
        - Social Media
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            shortenurl:
                              type: string
                            realurl:
                              type: string
                            message:
                              type: string
                            date:
                              type: string
                            tracks:
                              type: integer
                            clicks:
                              type: object
                              properties:
                                facebook:
                                  type: integer
              examples:
                example-1:
                  value:
                    stats:
                      items:
                        - id: '2236'
                          shortenurl: A4
                          realurl: 'http://munchies.com/index.php?route=information/contact&__vbtrk=NjkzNDowOnNvY2lhbG1lZGlhOmZhY2Vib29r&__vbtrk=MjgzNTowOnNvY2lhbG1lZGlhOnR3aXR0ZXI='
                          message: 'http://vbout.com/goto/A4 click here'
                          date: '1402401420'
                          tracks: 9
                          clicks:
                            facebook: '9'
                        - id: '2436'
                          shortenurl: Di
                          realurl: 'http://www.munchie.com/?__vbtrk=NzkxNjowOnNvY2lhbG1lZGlhOmZhY2Vib29r'
                          message: 'Test leadscoring  https://www.vbout.com/goto/Di'
                          date: '1408031400'
                          tracks: 8
                          clicks:
                            facebook: '8'
                        - ...
      operationId: get-SocialMedia-Stats
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      parameters:
        - schema:
            type: string
            default: all
          in: query
          name: channels
          description: 'The channels where the posts are gathered from.<br>**Possible values:**  all | facebook | twitter | linkedin | pinterest'
        - schema:
            type: string
            default: asc
          in: query
          name: sort
          description: 'Record Sorting.<br>**Possible values:**  asc | desc'
      x-codeSamples:
        - lang: cURL
          source: |
            GET https://api.vbout.com/1/socialmedia/stats.json?key={YOUR_API_ID}&channels=facebook
        - lang: PHP
          source: |
            <?php
            require_once('../PATH/TO/services/SocialMediaWS.php');
            $user_key = array('api_key' => '{YOUR_API_KEY}');
            $app = new SocialMediaWS($user_key);
            $params = array(
                'channels' => 'facebook',
            );
            $results = $app->getStats( $params );
            print_r($results);
            ?>
  SocialMedia/GetPost:
    get:
      summary: Get Post Summary
      tags:
        - Social Media
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  item:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      datetime:
                        type: string
                      item:
                        type: object
                        properties:
                          uid:
                            type: string
                      type:
                        type: string
                      image:
                        type: string
                      profile:
                        type: string
                x-examples:
                  example-1:
                    item:
                      id: '682'
                      title: 'OSV Treats & Chews provides a big nutritional boost of phytonutrients & antioxidants from fruits & vegetables; tomatoes, spinach & carrots! http://www.clearconsciencepet.com/osv-meaty-treats/'
                      datetime: '05/16/2013 10:34 AM'
                      item:
                        uid: '0'
                      type: facebook
                      image: ''
                      profile: '166346373390497'
              examples:
                example-1:
                  value:
                    item:
                      id: '682'
                      title: 'OSV Treats & Chews provides a big nutritional boost of phytonutrients & antioxidants from fruits & vegetables; tomatoes, spinach & carrots! http://www.clearconsciencepet.com/osv-meaty-treats/'
                      datetime: '05/16/2013 10:34 AM'
                      item:
                        uid: '0'
                      type: facebook
                      image: ''
                      profile: '166346373390497'
      operationId: get-SocialMedia-Channels
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      parameters:
        - schema:
            type: integer
            default: none
            example: (ID)
          in: query
          name: ID
          description: 'The id of the post<br>**Possible values:** (ID)'
          required: true
        - schema:
            type: string
            default: none
            example: facebook | twitter | linkedin
          in: query
          name: Channel
          description: 'The channel where the post is created.<br>**Possible values:** facebook | twitter | linkedin'
          required: true
      x-coxdeSamples:
        - lang: cURL
          source: |
            GET https://api.vbout.com/1/socialmedia/getpost.json?key={YOUR_API_ID}&id=682&channel=facebook
        - lang: PHP
          source: |
            <?php
            require_once('../PATH/TO/services/SocialMediaWS.php');
            $user_key = array('api_key' => '{YOUR_API_KEY}');
            $app = new SocialMediaWS($user_key);
            $params = array(
                'id' => '682',
                'channel' => 'facebook',
            );
            $results = $app->getMyPost( $params );
            print_r($results);
            ?>
    parameters: []
  /SocialMedia/AddPost:
    post:
      summary: Add Post Summary
      operationId: post-SocialMedia-AddPost
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      parameters:
        - schema:
            type: string
            default: none
          in: query
          name: message
          required: true
          description: 'The post message to be scheduled/sent<br> **Possible values:**"Text"'
        - schema:
            type: string
            default: none
          in: query
          name: channel
          description: 'The channels which the post will be sent to.<br>**Possible values:** facebook | twitter | linkedin | pinterest | instagram'
          required: true
        - schema:
            type: integer
            default: none
          in: query
          name: channelid
          required: true
          description: 'The channels which the post will be sent to.<br> **Possible values:** 1 | 2 | 3 | 4'
        - schema:
            type: string
          in: query
          name: photo
          description: 'The photo which will be attached to the post.<br> **Possible values:** (Link) or (Uploaded Image)'
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: isscheduled
          description: 'This flag will make the post to be scheduled for future.<br> **Possible values:** true | false'
        - schema:
            type: string
            pattern: '  m/d/Y | Y-m-d'
            default: none
            format: date
          in: query
          name: scheduleddate
          description: 'Date of the post to be scheduled.<br> **Possible values:** (Date)'
        - schema:
            type: string
            format: time
            default: none
          in: query
          name: scheduledhours
          description: 'AMPM of the post to be scheduled<br> **Possible values:** (Time)'
        - schema:
            type: string
          in: query
          description: 'AMPM of the post to be scheduled<br> **Possible values:** AM | PM | am | pm'
          name: scheduledampm
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: trackableLinks
          description: 'Convert all links inside message to short urls.<br> **Possible values:** true | false'
      tags:
        - Social Media
      x-codeSamples:
        - lang: cURL
          source: |
            POST https://api.vbout.com/1/socialmedia/addpost.json?key={YOUR_API_ID}
            message=Hello World
        - lang: PHP
          source: |
            <?php
             require_once('../PATH/TO/services/SocialMediaWS.php');
             $user_key = array('api_key' => '{YOUR_API_KEY}');
             $app = new SocialMediaWS($user_key);
             $params = array(
              'message' => 'Hello World',
             );
             $results = $app->AddNewpost( $params );
             print_r($results);
             ?>
  /SocialMedia/DeletePost:
    delete:
      summary: Delete Post Summary
      operationId: delete-SocialMedia-DeletePost
      responses:
        '200':
          description: Successful operation
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      x-codeSamples:
        - lang: cURL
          source: |
            POST https://api.vbout.com/1/socialmedia/deletepost.json?key={YOUR_API_ID}
              id=1
        - lang: PHP
          source: "<?php\nrequire_once('../PATH/TO/services/SocialMediaWS.php');\t\n$user_key = array('api_key' => '{YOUR_API_KEY}')\t\n$app = new SocialMediaWS($user_key);\n$id = '1';\n$results = $app->removePost($id);\nprint_r($results);\n?>\n"
      parameters:
        - schema:
            type: integer
            default: none
          in: query
          name: id
          required: true
          description: 'ID of the post message to be deleted.<br>**Possible Values:**(ID)'
        - schema:
            type: string
            default: none
          in: query
          name: channel
          description: 'The channels which the post will be sent to.<br>**Possible Values:** facebook | twitter | linkedin'
      tags:
        - Social Media
  /SocialMedia/EditPost:
    post:
      summary: Edit Post Summary
      operationId: post-SocialMedia-EditPost
      responses: {}
      tags:
        - Social Media
      description: |-
        **Authentication:** `Required`  
          
        **Format:** `XML | JSON`
      x-codeSamples:
        - lang: cURL
          source: |
            POST https://api.vbout.com/1/socialmedia/editpost.json?key={YOUR_API_ID}
              id=1
              channel=facebook
              message=Hello World!
              scheduleddatetime=2020-10-20 15:30:00
      parameters:
        - schema:
            type: integer
            default: none
          in: query
          name: id
          description: 'ID of the post message to be edited.<br>**Possible values:** (ID)'
          required: true
        - schema:
            type: string
            default: none
          in: query
          name: channel
          description: 'The channel where the post was scheduled..<br>**Possible values:** facebook | twitter | linkedin | pinterest | instagram'
          required: true
        - schema:
            type: string
            default: none
            format: date-time
            pattern: 'ISO-8601 (Y-m-d H:i:s)'
          in: query
          name: message
          description: 'The post message to be scheduled/sent.<br>**Possible values:** (Text)'
        - schema:
            type: string
          in: query
          name: scheduleddatetime
          description: 'Date/Time of the post to be scheduled<br>**Possible values:** (Datetime)'
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  requestBodies: {}
x-logo:
  url: 'https://i.im.ge/2022/09/15/1lJujf.vbout-logo.png'
  backgroundColor: '#FFFFFF'
  altText: Vbout logo
